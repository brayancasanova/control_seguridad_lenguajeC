

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 03 19:44:55 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 25/07/2024 GMT
    38                           ; 
    39                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0004                     fsr             equ	4
    72     0004                     fsr0            equ	4
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0000                     INDF            equ	0	;# 
    80     0001                     TMR0            equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR             equ	4	;# 
    84     0005                     PORTA           equ	5	;# 
    85     0006                     PORTB           equ	6	;# 
    86     0007                     PORTC           equ	7	;# 
    87     0008                     PORTD           equ	8	;# 
    88     0009                     PORTE           equ	9	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     0088                     TRISD           equ	136	;# 
   119     0089                     TRISE           equ	137	;# 
   120     008C                     PIE1            equ	140	;# 
   121     008D                     PIE2            equ	141	;# 
   122     008E                     PCON            equ	142	;# 
   123     008F                     OSCCON          equ	143	;# 
   124     0090                     OSCTUNE         equ	144	;# 
   125     0091                     SSPCON2         equ	145	;# 
   126     0092                     PR2             equ	146	;# 
   127     0093                     SSPADD          equ	147	;# 
   128     0093                     SSPMSK          equ	147	;# 
   129     0093                     MSK             equ	147	;# 
   130     0094                     SSPSTAT         equ	148	;# 
   131     0095                     WPUB            equ	149	;# 
   132     0096                     IOCB            equ	150	;# 
   133     0097                     VRCON           equ	151	;# 
   134     0098                     TXSTA           equ	152	;# 
   135     0099                     SPBRG           equ	153	;# 
   136     009A                     SPBRGH          equ	154	;# 
   137     009B                     PWM1CON         equ	155	;# 
   138     009C                     ECCPAS          equ	156	;# 
   139     009D                     PSTRCON         equ	157	;# 
   140     009E                     ADRESL          equ	158	;# 
   141     009F                     ADCON1          equ	159	;# 
   142     0105                     WDTCON          equ	261	;# 
   143     0107                     CM1CON0         equ	263	;# 
   144     0108                     CM2CON0         equ	264	;# 
   145     0109                     CM2CON1         equ	265	;# 
   146     010C                     EEDATA          equ	268	;# 
   147     010C                     EEDAT           equ	268	;# 
   148     010D                     EEADR           equ	269	;# 
   149     010E                     EEDATH          equ	270	;# 
   150     010F                     EEADRH          equ	271	;# 
   151     0185                     SRCON           equ	389	;# 
   152     0187                     BAUDCTL         equ	391	;# 
   153     0188                     ANSEL           equ	392	;# 
   154     0189                     ANSELH          equ	393	;# 
   155     018C                     EECON1          equ	396	;# 
   156     018D                     EECON2          equ	397	;# 
   157     0000                     INDF            equ	0	;# 
   158     0001                     TMR0            equ	1	;# 
   159     0002                     PCL             equ	2	;# 
   160     0003                     STATUS          equ	3	;# 
   161     0004                     FSR             equ	4	;# 
   162     0005                     PORTA           equ	5	;# 
   163     0006                     PORTB           equ	6	;# 
   164     0007                     PORTC           equ	7	;# 
   165     0008                     PORTD           equ	8	;# 
   166     0009                     PORTE           equ	9	;# 
   167     000A                     PCLATH          equ	10	;# 
   168     000B                     INTCON          equ	11	;# 
   169     000C                     PIR1            equ	12	;# 
   170     000D                     PIR2            equ	13	;# 
   171     000E                     TMR1            equ	14	;# 
   172     000E                     TMR1L           equ	14	;# 
   173     000F                     TMR1H           equ	15	;# 
   174     0010                     T1CON           equ	16	;# 
   175     0011                     TMR2            equ	17	;# 
   176     0012                     T2CON           equ	18	;# 
   177     0013                     SSPBUF          equ	19	;# 
   178     0014                     SSPCON          equ	20	;# 
   179     0015                     CCPR1           equ	21	;# 
   180     0015                     CCPR1L          equ	21	;# 
   181     0016                     CCPR1H          equ	22	;# 
   182     0017                     CCP1CON         equ	23	;# 
   183     0018                     RCSTA           equ	24	;# 
   184     0019                     TXREG           equ	25	;# 
   185     001A                     RCREG           equ	26	;# 
   186     001B                     CCPR2           equ	27	;# 
   187     001B                     CCPR2L          equ	27	;# 
   188     001C                     CCPR2H          equ	28	;# 
   189     001D                     CCP2CON         equ	29	;# 
   190     001E                     ADRESH          equ	30	;# 
   191     001F                     ADCON0          equ	31	;# 
   192     0081                     OPTION_REG      equ	129	;# 
   193     0085                     TRISA           equ	133	;# 
   194     0086                     TRISB           equ	134	;# 
   195     0087                     TRISC           equ	135	;# 
   196     0088                     TRISD           equ	136	;# 
   197     0089                     TRISE           equ	137	;# 
   198     008C                     PIE1            equ	140	;# 
   199     008D                     PIE2            equ	141	;# 
   200     008E                     PCON            equ	142	;# 
   201     008F                     OSCCON          equ	143	;# 
   202     0090                     OSCTUNE         equ	144	;# 
   203     0091                     SSPCON2         equ	145	;# 
   204     0092                     PR2             equ	146	;# 
   205     0093                     SSPADD          equ	147	;# 
   206     0093                     SSPMSK          equ	147	;# 
   207     0093                     MSK             equ	147	;# 
   208     0094                     SSPSTAT         equ	148	;# 
   209     0095                     WPUB            equ	149	;# 
   210     0096                     IOCB            equ	150	;# 
   211     0097                     VRCON           equ	151	;# 
   212     0098                     TXSTA           equ	152	;# 
   213     0099                     SPBRG           equ	153	;# 
   214     009A                     SPBRGH          equ	154	;# 
   215     009B                     PWM1CON         equ	155	;# 
   216     009C                     ECCPAS          equ	156	;# 
   217     009D                     PSTRCON         equ	157	;# 
   218     009E                     ADRESL          equ	158	;# 
   219     009F                     ADCON1          equ	159	;# 
   220     0105                     WDTCON          equ	261	;# 
   221     0107                     CM1CON0         equ	263	;# 
   222     0108                     CM2CON0         equ	264	;# 
   223     0109                     CM2CON1         equ	265	;# 
   224     010C                     EEDATA          equ	268	;# 
   225     010C                     EEDAT           equ	268	;# 
   226     010D                     EEADR           equ	269	;# 
   227     010E                     EEDATH          equ	270	;# 
   228     010F                     EEADRH          equ	271	;# 
   229     0185                     SRCON           equ	389	;# 
   230     0187                     BAUDCTL         equ	391	;# 
   231     0188                     ANSEL           equ	392	;# 
   232     0189                     ANSELH          equ	393	;# 
   233     018C                     EECON1          equ	396	;# 
   234     018D                     EECON2          equ	397	;# 
   235     0000                     INDF            equ	0	;# 
   236     0001                     TMR0            equ	1	;# 
   237     0002                     PCL             equ	2	;# 
   238     0003                     STATUS          equ	3	;# 
   239     0004                     FSR             equ	4	;# 
   240     0005                     PORTA           equ	5	;# 
   241     0006                     PORTB           equ	6	;# 
   242     0007                     PORTC           equ	7	;# 
   243     0008                     PORTD           equ	8	;# 
   244     0009                     PORTE           equ	9	;# 
   245     000A                     PCLATH          equ	10	;# 
   246     000B                     INTCON          equ	11	;# 
   247     000C                     PIR1            equ	12	;# 
   248     000D                     PIR2            equ	13	;# 
   249     000E                     TMR1            equ	14	;# 
   250     000E                     TMR1L           equ	14	;# 
   251     000F                     TMR1H           equ	15	;# 
   252     0010                     T1CON           equ	16	;# 
   253     0011                     TMR2            equ	17	;# 
   254     0012                     T2CON           equ	18	;# 
   255     0013                     SSPBUF          equ	19	;# 
   256     0014                     SSPCON          equ	20	;# 
   257     0015                     CCPR1           equ	21	;# 
   258     0015                     CCPR1L          equ	21	;# 
   259     0016                     CCPR1H          equ	22	;# 
   260     0017                     CCP1CON         equ	23	;# 
   261     0018                     RCSTA           equ	24	;# 
   262     0019                     TXREG           equ	25	;# 
   263     001A                     RCREG           equ	26	;# 
   264     001B                     CCPR2           equ	27	;# 
   265     001B                     CCPR2L          equ	27	;# 
   266     001C                     CCPR2H          equ	28	;# 
   267     001D                     CCP2CON         equ	29	;# 
   268     001E                     ADRESH          equ	30	;# 
   269     001F                     ADCON0          equ	31	;# 
   270     0081                     OPTION_REG      equ	129	;# 
   271     0085                     TRISA           equ	133	;# 
   272     0086                     TRISB           equ	134	;# 
   273     0087                     TRISC           equ	135	;# 
   274     0088                     TRISD           equ	136	;# 
   275     0089                     TRISE           equ	137	;# 
   276     008C                     PIE1            equ	140	;# 
   277     008D                     PIE2            equ	141	;# 
   278     008E                     PCON            equ	142	;# 
   279     008F                     OSCCON          equ	143	;# 
   280     0090                     OSCTUNE         equ	144	;# 
   281     0091                     SSPCON2         equ	145	;# 
   282     0092                     PR2             equ	146	;# 
   283     0093                     SSPADD          equ	147	;# 
   284     0093                     SSPMSK          equ	147	;# 
   285     0093                     MSK             equ	147	;# 
   286     0094                     SSPSTAT         equ	148	;# 
   287     0095                     WPUB            equ	149	;# 
   288     0096                     IOCB            equ	150	;# 
   289     0097                     VRCON           equ	151	;# 
   290     0098                     TXSTA           equ	152	;# 
   291     0099                     SPBRG           equ	153	;# 
   292     009A                     SPBRGH          equ	154	;# 
   293     009B                     PWM1CON         equ	155	;# 
   294     009C                     ECCPAS          equ	156	;# 
   295     009D                     PSTRCON         equ	157	;# 
   296     009E                     ADRESL          equ	158	;# 
   297     009F                     ADCON1          equ	159	;# 
   298     0105                     WDTCON          equ	261	;# 
   299     0107                     CM1CON0         equ	263	;# 
   300     0108                     CM2CON0         equ	264	;# 
   301     0109                     CM2CON1         equ	265	;# 
   302     010C                     EEDATA          equ	268	;# 
   303     010C                     EEDAT           equ	268	;# 
   304     010D                     EEADR           equ	269	;# 
   305     010E                     EEDATH          equ	270	;# 
   306     010F                     EEADRH          equ	271	;# 
   307     0185                     SRCON           equ	389	;# 
   308     0187                     BAUDCTL         equ	391	;# 
   309     0188                     ANSEL           equ	392	;# 
   310     0189                     ANSELH          equ	393	;# 
   311     018C                     EECON1          equ	396	;# 
   312     018D                     EECON2          equ	397	;# 
   313     0000                     INDF            equ	0	;# 
   314     0001                     TMR0            equ	1	;# 
   315     0002                     PCL             equ	2	;# 
   316     0003                     STATUS          equ	3	;# 
   317     0004                     FSR             equ	4	;# 
   318     0005                     PORTA           equ	5	;# 
   319     0006                     PORTB           equ	6	;# 
   320     0007                     PORTC           equ	7	;# 
   321     0008                     PORTD           equ	8	;# 
   322     0009                     PORTE           equ	9	;# 
   323     000A                     PCLATH          equ	10	;# 
   324     000B                     INTCON          equ	11	;# 
   325     000C                     PIR1            equ	12	;# 
   326     000D                     PIR2            equ	13	;# 
   327     000E                     TMR1            equ	14	;# 
   328     000E                     TMR1L           equ	14	;# 
   329     000F                     TMR1H           equ	15	;# 
   330     0010                     T1CON           equ	16	;# 
   331     0011                     TMR2            equ	17	;# 
   332     0012                     T2CON           equ	18	;# 
   333     0013                     SSPBUF          equ	19	;# 
   334     0014                     SSPCON          equ	20	;# 
   335     0015                     CCPR1           equ	21	;# 
   336     0015                     CCPR1L          equ	21	;# 
   337     0016                     CCPR1H          equ	22	;# 
   338     0017                     CCP1CON         equ	23	;# 
   339     0018                     RCSTA           equ	24	;# 
   340     0019                     TXREG           equ	25	;# 
   341     001A                     RCREG           equ	26	;# 
   342     001B                     CCPR2           equ	27	;# 
   343     001B                     CCPR2L          equ	27	;# 
   344     001C                     CCPR2H          equ	28	;# 
   345     001D                     CCP2CON         equ	29	;# 
   346     001E                     ADRESH          equ	30	;# 
   347     001F                     ADCON0          equ	31	;# 
   348     0081                     OPTION_REG      equ	129	;# 
   349     0085                     TRISA           equ	133	;# 
   350     0086                     TRISB           equ	134	;# 
   351     0087                     TRISC           equ	135	;# 
   352     0088                     TRISD           equ	136	;# 
   353     0089                     TRISE           equ	137	;# 
   354     008C                     PIE1            equ	140	;# 
   355     008D                     PIE2            equ	141	;# 
   356     008E                     PCON            equ	142	;# 
   357     008F                     OSCCON          equ	143	;# 
   358     0090                     OSCTUNE         equ	144	;# 
   359     0091                     SSPCON2         equ	145	;# 
   360     0092                     PR2             equ	146	;# 
   361     0093                     SSPADD          equ	147	;# 
   362     0093                     SSPMSK          equ	147	;# 
   363     0093                     MSK             equ	147	;# 
   364     0094                     SSPSTAT         equ	148	;# 
   365     0095                     WPUB            equ	149	;# 
   366     0096                     IOCB            equ	150	;# 
   367     0097                     VRCON           equ	151	;# 
   368     0098                     TXSTA           equ	152	;# 
   369     0099                     SPBRG           equ	153	;# 
   370     009A                     SPBRGH          equ	154	;# 
   371     009B                     PWM1CON         equ	155	;# 
   372     009C                     ECCPAS          equ	156	;# 
   373     009D                     PSTRCON         equ	157	;# 
   374     009E                     ADRESL          equ	158	;# 
   375     009F                     ADCON1          equ	159	;# 
   376     0105                     WDTCON          equ	261	;# 
   377     0107                     CM1CON0         equ	263	;# 
   378     0108                     CM2CON0         equ	264	;# 
   379     0109                     CM2CON1         equ	265	;# 
   380     010C                     EEDATA          equ	268	;# 
   381     010C                     EEDAT           equ	268	;# 
   382     010D                     EEADR           equ	269	;# 
   383     010E                     EEDATH          equ	270	;# 
   384     010F                     EEADRH          equ	271	;# 
   385     0185                     SRCON           equ	389	;# 
   386     0187                     BAUDCTL         equ	391	;# 
   387     0188                     ANSEL           equ	392	;# 
   388     0189                     ANSELH          equ	393	;# 
   389     018C                     EECON1          equ	396	;# 
   390     018D                     EECON2          equ	397	;# 
   391                           
   392                           	psect	idataBANK0
   393     015E                     __pidataBANK0:
   394                           
   395                           ;initializer for _character5
   396     015E  3400               	retlw	0
   397     015F  340E               	retlw	14
   398     0160  3411               	retlw	17
   399     0161  3411               	retlw	17
   400     0162  3411               	retlw	17
   401     0163  340A               	retlw	10
   402     0164  341B               	retlw	27
   403     0165  3400               	retlw	0
   404                           
   405                           ;initializer for _character4
   406     0166  3400               	retlw	0
   407     0167  3404               	retlw	4
   408     0168  3411               	retlw	17
   409     0169  340E               	retlw	14
   410     016A  3404               	retlw	4
   411     016B  3404               	retlw	4
   412     016C  340A               	retlw	10
   413     016D  3411               	retlw	17
   414                           
   415                           ;initializer for _character3
   416     016E  3400               	retlw	0
   417     016F  3404               	retlw	4
   418     0170  3400               	retlw	0
   419     0171  340E               	retlw	14
   420     0172  3415               	retlw	21
   421     0173  3404               	retlw	4
   422     0174  340A               	retlw	10
   423     0175  3411               	retlw	17
   424                           
   425                           ;initializer for _character2
   426     0176  341B               	retlw	27
   427     0177  3400               	retlw	0
   428     0178  340A               	retlw	10
   429     0179  340A               	retlw	10
   430     017A  3400               	retlw	0
   431     017B  3400               	retlw	0
   432     017C  340E               	retlw	14
   433     017D  3411               	retlw	17
   434                           
   435                           ;initializer for _character1
   436     017E  341B               	retlw	27
   437     017F  3400               	retlw	0
   438     0180  340A               	retlw	10
   439     0181  340A               	retlw	10
   440     0182  3400               	retlw	0
   441     0183  3411               	retlw	17
   442     0184  340E               	retlw	14
   443     0185  3400               	retlw	0
   444                           
   445                           	psect	idataBANK1
   446     00B3                     __pidataBANK1:
   447                           
   448                           ;initializer for keypad_getkey@F1424
   449     00B3  3431               	retlw	49
   450     00B4  3432               	retlw	50
   451     00B5  3433               	retlw	51
   452     00B6  3441               	retlw	65
   453     00B7  3434               	retlw	52
   454     00B8  3435               	retlw	53
   455     00B9  3436               	retlw	54
   456     00BA  3442               	retlw	66
   457     00BB  3437               	retlw	55
   458     00BC  3438               	retlw	56
   459     00BD  3439               	retlw	57
   460     00BE  3443               	retlw	67
   461     00BF  342A               	retlw	42
   462     00C0  3430               	retlw	48
   463     00C1  3423               	retlw	35
   464     00C2  3444               	retlw	68
   465                           
   466                           	psect	strings
   467     0003                     __pstrings:
   468     0003                     stringtab:
   469     0003                     __stringtab:
   470     0003                     stringcode:	
   471                           ;	String table - string pointers are 1 byte each
   472                           
   473     0003                     stringdir:
   474     0003  3000               	movlw	high stringdir
   475     0004  008A               	movwf	10
   476     0005  0804               	movf	4,w
   477     0006  0A84               	incf	4,f
   478     0007  0782               	addwf	2,f
   479     0008                     __stringbase:
   480     0008  3400               	retlw	0
   481     0009                     __end_of__stringtab:
   482     0009                     _password:
   483     0009  3432               	retlw	50
   484     000A  3430               	retlw	48
   485     000B  3432               	retlw	50
   486     000C  3431               	retlw	49
   487     000D  3400               	retlw	0
   488     000E                     __end_of_password:
   489     0007                     _PORTCbits      set	7
   490     0007                     _PORTC          set	7
   491     0006                     _PORTB          set	6
   492     0003                     _STATUSbits     set	3
   493     0008                     _PORTD          set	8
   494     0005                     _PORTAbits      set	5
   495     0009                     _PORTEbits      set	9
   496     0087                     _TRISC          set	135
   497     0081                     _OPTION_REGbits set	129
   498     0086                     _TRISB          set	134
   499     0085                     _TRISAbits      set	133
   500     0088                     _TRISD          set	136
   501     0085                     _TRISA          set	133
   502     0089                     _TRISE          set	137
   503     008F                     _OSCCON         set	143
   504     0189                     _ANSELH         set	393
   505     000E                     STR_4:
   506     000E  3473               	retlw	115	;'s'
   507     000F  3469               	retlw	105	;'i'
   508     0010  3473               	retlw	115	;'s'
   509     0011  3474               	retlw	116	;'t'
   510     0012  3465               	retlw	101	;'e'
   511     0013  346D               	retlw	109	;'m'
   512     0014  3461               	retlw	97	;'a'
   513     0015  3420               	retlw	32	;' '
   514     0016  3462               	retlw	98	;'b'
   515     0017  346C               	retlw	108	;'l'
   516     0018  346F               	retlw	111	;'o'
   517     0019  3471               	retlw	113	;'q'
   518     001A  3475               	retlw	117	;'u'
   519     001B  3465               	retlw	101	;'e'
   520     001C  3461               	retlw	97	;'a'
   521     001D  3464               	retlw	100	;'d'
   522     001E  346F               	retlw	111	;'o'
   523     001F  3400               	retlw	0
   524     0020                     STR_3:
   525     0020  3443               	retlw	67	;'C'
   526     0021  346C               	retlw	108	;'l'
   527     0022  3461               	retlw	97	;'a'
   528     0023  3476               	retlw	118	;'v'
   529     0024  3465               	retlw	101	;'e'
   530     0025  3420               	retlw	32	;' '
   531     0026  3449               	retlw	73	;'I'
   532     0027  346E               	retlw	110	;'n'
   533     0028  3463               	retlw	99	;'c'
   534     0029  346F               	retlw	111	;'o'
   535     002A  3472               	retlw	114	;'r'
   536     002B  3472               	retlw	114	;'r'
   537     002C  3465               	retlw	101	;'e'
   538     002D  3463               	retlw	99	;'c'
   539     002E  3474               	retlw	116	;'t'
   540     002F  3461               	retlw	97	;'a'
   541     0030  3400               	retlw	0
   542     0031                     STR_6:
   543     0031  3450               	retlw	80	;'P'
   544     0032  3469               	retlw	105	;'i'
   545     0033  3420               	retlw	32	;' '
   546     0034  3444               	retlw	68	;'D'
   547     0035  3420               	retlw	32	;' '
   548     0036  3420               	retlw	32	;' '
   549     0037  3454               	retlw	84	;'T'
   550     0038  3420               	retlw	32	;' '
   551     0039  3420               	retlw	32	;' '
   552     003A  3443               	retlw	67	;'C'
   553     003B  3420               	retlw	32	;' '
   554     003C  3420               	retlw	32	;' '
   555     003D  346F               	retlw	111	;'o'
   556     003E  3468               	retlw	104	;'h'
   557     003F  346D               	retlw	109	;'m'
   558     0040  3400               	retlw	0
   559     0041                     STR_2:
   560     0041  3443               	retlw	67	;'C'
   561     0042  346C               	retlw	108	;'l'
   562     0043  3461               	retlw	97	;'a'
   563     0044  3476               	retlw	118	;'v'
   564     0045  3465               	retlw	101	;'e'
   565     0046  3420               	retlw	32	;' '
   566     0047  3443               	retlw	67	;'C'
   567     0048  346F               	retlw	111	;'o'
   568     0049  3472               	retlw	114	;'r'
   569     004A  3472               	retlw	114	;'r'
   570     004B  3465               	retlw	101	;'e'
   571     004C  3463               	retlw	99	;'c'
   572     004D  3474               	retlw	116	;'t'
   573     004E  3461               	retlw	97	;'a'
   574     004F  3400               	retlw	0
   575     0050                     STR_1:
   576     0050  3450               	retlw	80	;'P'
   577     0051  3472               	retlw	114	;'r'
   578     0052  3465               	retlw	101	;'e'
   579     0053  3473               	retlw	115	;'s'
   580     0054  3473               	retlw	115	;'s'
   581     0055  3420               	retlw	32	;' '
   582     0056  3461               	retlw	97	;'a'
   583     0057  3420               	retlw	32	;' '
   584     0058  344B               	retlw	75	;'K'
   585     0059  3465               	retlw	101	;'e'
   586     005A  3479               	retlw	121	;'y'
   587     005B  3400               	retlw	0
   588     005C                     STR_5:
   589     005C  344D               	retlw	77	;'M'
   590     005D  346F               	retlw	111	;'o'
   591     005E  346E               	retlw	110	;'n'
   592     005F  3469               	retlw	105	;'i'
   593     0060  3474               	retlw	116	;'t'
   594     0061  346F               	retlw	111	;'o'
   595     0062  3472               	retlw	114	;'r'
   596     0063  3465               	retlw	101	;'e'
   597     0064  346F               	retlw	111	;'o'
   598     0065  3400               	retlw	0
   599                           
   600                           	psect	cinit
   601     07D9                     start_initialization:	
   602                           ; #config settings
   603                           
   604     07D9                     __initialization:
   605                           
   606                           ; Initialize objects allocated to BANK1
   607     07D9  1383               	bcf	3,7	;select IRP bank0
   608     07DA  30B0               	movlw	low (__pdataBANK1+16)
   609     07DB  00FD               	movwf	btemp+-1
   610     07DC  3000               	movlw	high __pidataBANK1
   611     07DD  00FE               	movwf	btemp
   612     07DE  30B3               	movlw	low __pidataBANK1
   613     07DF  00FF               	movwf	btemp+1
   614     07E0  30A0               	movlw	low __pdataBANK1
   615     07E1  0084               	movwf	4
   616     07E2  120A  118A  20DA  120A  118A  	fcall	init_ram0
   617                           
   618                           ; Initialize objects allocated to BANK0
   619     07E7  3048               	movlw	low (__pdataBANK0+40)
   620     07E8  00FD               	movwf	btemp+-1
   621     07E9  3001               	movlw	high __pidataBANK0
   622     07EA  00FE               	movwf	btemp
   623     07EB  305E               	movlw	low __pidataBANK0
   624     07EC  00FF               	movwf	btemp+1
   625     07ED  3020               	movlw	low __pdataBANK0
   626     07EE  0084               	movwf	4
   627     07EF  120A  118A  20DA  120A  118A  	fcall	init_ram0
   628                           
   629                           ; Clear objects allocated to BANK0
   630     07F4  01DE               	clrf	__pbssBANK0& (0+127)
   631     07F5  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   632     07F6  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   633     07F7  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   634     07F8  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   635     07F9  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   636     07FA  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   637                           
   638                           ; Clear objects allocated to COMMON
   639     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   640     07FC                     end_of_initialization:	
   641                           ;End of C runtime variable initialization code
   642                           
   643     07FC                     __end_of__initialization:
   644     07FC  0183               	clrf	3
   645     07FD  120A  118A  2E72   	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMMON
   648     007D                     __pbssCOMMON:
   649     007D                     _idx:
   650     007D                     	ds	1
   651                           
   652                           	psect	bssBANK0
   653     005E                     __pbssBANK0:
   654     005E                     _intentos:
   655     005E                     	ds	2
   656     0060                     _pass_user:
   657     0060                     	ds	5
   658                           
   659                           	psect	dataBANK0
   660     0020                     __pdataBANK0:
   661     0020                     _character5:
   662     0020                     	ds	8
   663     0028                     _character4:
   664     0028                     	ds	8
   665     0030                     _character3:
   666     0030                     	ds	8
   667     0038                     _character2:
   668     0038                     	ds	8
   669     0040                     _character1:
   670     0040                     	ds	8
   671                           
   672                           	psect	dataBANK1
   673     00A0                     __pdataBANK1:
   674     00A0                     keypad_getkey@F1424:
   675     00A0                     	ds	16
   676                           
   677                           	psect	inittext
   678     00D6                     init_fetch0:	
   679                           ;	Called with low address in FSR and high address in W
   680                           
   681     00D6  087E               	movf	btemp,w
   682     00D7  008A               	movwf	10
   683     00D8  087F               	movf	btemp+1,w
   684     00D9  0082               	movwf	2
   685     00DA                     init_ram0:	
   686                           ;Called with:
   687                           ;	high address of idata address in btemp 
   688                           ;	low address of idata address in btemp+1 
   689                           ;	low address of data in FSR
   690                           ;	high address + 1 of data in btemp-1
   691                           
   692     00DA  120A  118A  20D6  120A  118A  	fcall	init_fetch0
   693     00DF  0080               	movwf	0
   694     00E0  0A84               	incf	4,f
   695     00E1  0804               	movf	4,w
   696     00E2  067D               	xorwf	btemp+-1,w
   697     00E3  1903               	btfsc	3,2
   698     00E4  3400               	retlw	0
   699     00E5  0AFF               	incf	btemp+1,f
   700     00E6  1903               	btfsc	3,2
   701     00E7  0AFE               	incf	btemp,f
   702     00E8  28DA               	goto	init_ram0
   703                           
   704                           	psect	cstackCOMMON
   705     0070                     __pcstackCOMMON:
   706     0070                     ?_LCD_Init:
   707     0070                     ?_keypad_init:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0070                     ?_Lmain:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     0070                     ?_LCD_Char:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ?_LCD_Command:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ?_keypad_getkey:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ?_LCD_Clear:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0070                     ?_secuencia5:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     0070                     ?_monitoreo:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_secuencia6:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_secuencia7:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_delay_ms_variable:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?___bmul:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_strncmp:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ___bmul@multiplicand:	
   750                           ; 2 bytes @ 0x0
   751                           
   752     0070                     strncmp@l:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     delay_ms_variable@ms:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ??_keypad_init:	
   759                           ; 2 bytes @ 0x0
   760                           
   761     0070                     ??_LCD_Char:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ??_LCD_Command:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ??_keypad_getkey:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ??_secuencia5:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ??_secuencia6:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ??_secuencia7:	
   777                           ; 1 bytes @ 0x0
   778                           
   779                           
   780                           ; 1 bytes @ 0x0
   781     0070                     	ds	1
   782     0071                     ___bmul@product:
   783     0071                     strncmp@r:	
   784                           ; 1 bytes @ 0x1
   785                           
   786     0071                     ??___bmul:	
   787                           ; 1 bytes @ 0x1
   788                           
   789                           
   790                           ; 1 bytes @ 0x1
   791     0071                     	ds	1
   792     0072                     LCD_Command@cmd:
   793     0072                     LCD_Char@dat:	
   794                           ; 1 bytes @ 0x2
   795                           
   796     0072                     ___bmul@multiplier:	
   797                           ; 1 bytes @ 0x2
   798                           
   799     0072                     strncmp@n:	
   800                           ; 1 bytes @ 0x2
   801                           
   802     0072                     ??_delay_ms_variable:	
   803                           ; 2 bytes @ 0x2
   804                           
   805                           
   806                           ; 1 bytes @ 0x2
   807     0072                     	ds	1
   808     0073                     ?_LCD_String:
   809     0073                     ?_LCD_Custom_Char:	
   810                           ; 1 bytes @ 0x3
   811                           
   812     0073                     LCD_String@msg:	
   813                           ; 1 bytes @ 0x3
   814                           
   815     0073                     LCD_Custom_Char@msg:	
   816                           ; 1 bytes @ 0x3
   817                           
   818     0073                     ??_LCD_Init:	
   819                           ; 1 bytes @ 0x3
   820                           
   821     0073                     ??_LCD_Clear:	
   822                           ; 1 bytes @ 0x3
   823                           
   824                           
   825                           ; 1 bytes @ 0x3
   826     0073                     	ds	1
   827     0074                     ?_LCD_String_xy:
   828     0074                     ?_blink_led:	
   829                           ; 1 bytes @ 0x4
   830                           
   831     0074                     LCD_String_xy@pos:	
   832                           ; 1 bytes @ 0x4
   833                           
   834     0074                     blink_led@on_time:	
   835                           ; 1 bytes @ 0x4
   836                           
   837     0074                     ??_strncmp:	
   838                           ; 2 bytes @ 0x4
   839                           
   840     0074                     ??_LCD_String:	
   841                           ; 1 bytes @ 0x4
   842                           
   843     0074                     ??_LCD_Custom_Char:	
   844                           ; 1 bytes @ 0x4
   845                           
   846                           
   847                           ; 1 bytes @ 0x4
   848     0074                     	ds	1
   849     0075                     LCD_String_xy@msg:
   850     0075                     LCD_Custom_Char@loc:	
   851                           ; 1 bytes @ 0x5
   852                           
   853                           
   854                           ; 1 bytes @ 0x5
   855     0075                     	ds	1
   856     0076                     LCD_String_xy@row:
   857     0076                     LCD_Custom_Char@i:	
   858                           ; 1 bytes @ 0x6
   859                           
   860     0076                     blink_led@off_time:	
   861                           ; 1 bytes @ 0x6
   862                           
   863     0076                     ??_LCD_String_xy:	
   864                           ; 2 bytes @ 0x6
   865                           
   866                           
   867                           ; 1 bytes @ 0x6
   868     0076                     	ds	1
   869     0077                     LCD_String_xy@location:
   870                           
   871                           ; 1 bytes @ 0x7
   872     0077                     	ds	1
   873     0078                     Lmain@i:
   874     0078                     blink_led@duration:	
   875                           ; 1 bytes @ 0x8
   876                           
   877     0078                     ??_Lmain:	
   878                           ; 2 bytes @ 0x8
   879                           
   880     0078                     ??_monitoreo:	
   881                           ; 1 bytes @ 0x8
   882                           
   883                           
   884                           ; 1 bytes @ 0x8
   885     0078                     	ds	2
   886     007A                     ??_blink_led:
   887                           
   888                           ; 1 bytes @ 0xA
   889     007A                     	ds	2
   890     007C                     main@key:
   891                           
   892                           ; 1 bytes @ 0xC
   893     007C                     	ds	1
   894                           
   895                           	psect	cstackBANK0
   896     0048                     __pcstackBANK0:
   897     0048                     blink_led@elapsed_time:
   898     0048                     secuencia5@i:	
   899                           ; 2 bytes @ 0x0
   900                           
   901     0048                     secuencia6@i:	
   902                           ; 2 bytes @ 0x0
   903                           
   904     0048                     secuencia7@i:	
   905                           ; 2 bytes @ 0x0
   906                           
   907     0048                     keypad_getkey@letras:	
   908                           ; 2 bytes @ 0x0
   909                           
   910                           
   911                           ; 16 bytes @ 0x0
   912     0048                     	ds	2
   913     004A                     blink_led@led:
   914     004A                     secuencia5@i_238:	
   915                           ; 1 bytes @ 0x2
   916                           
   917     004A                     secuencia6@i_247:	
   918                           ; 2 bytes @ 0x2
   919                           
   920     004A                     secuencia7@i_261:	
   921                           ; 2 bytes @ 0x2
   922                           
   923                           
   924                           ; 2 bytes @ 0x2
   925     004A                     	ds	2
   926     004C                     secuencia5@var12:
   927     004C                     secuencia6@var12:	
   928                           ; 2 bytes @ 0x4
   929                           
   930     004C                     secuencia7@var12:	
   931                           ; 2 bytes @ 0x4
   932                           
   933                           
   934                           ; 2 bytes @ 0x4
   935     004C                     	ds	2
   936     004E                     secuencia5@var34:
   937     004E                     secuencia6@var1:	
   938                           ; 2 bytes @ 0x6
   939                           
   940     004E                     secuencia7@var34:	
   941                           ; 2 bytes @ 0x6
   942                           
   943                           
   944                           ; 2 bytes @ 0x6
   945     004E                     	ds	2
   946     0050                     secuencia5@var4:
   947     0050                     secuencia6@var2:	
   948                           ; 2 bytes @ 0x8
   949                           
   950     0050                     secuencia7@var1:	
   951                           ; 2 bytes @ 0x8
   952                           
   953                           
   954                           ; 2 bytes @ 0x8
   955     0050                     	ds	2
   956     0052                     secuencia5@var1:
   957     0052                     secuencia6@var34:	
   958                           ; 2 bytes @ 0xA
   959                           
   960     0052                     secuencia7@var3:	
   961                           ; 2 bytes @ 0xA
   962                           
   963                           
   964                           ; 2 bytes @ 0xA
   965     0052                     	ds	2
   966     0054                     secuencia5@var2:
   967     0054                     secuencia6@var3:	
   968                           ; 2 bytes @ 0xC
   969                           
   970     0054                     secuencia7@var2:	
   971                           ; 2 bytes @ 0xC
   972                           
   973                           
   974                           ; 2 bytes @ 0xC
   975     0054                     	ds	2
   976     0056                     secuencia5@var3:
   977     0056                     secuencia6@var4:	
   978                           ; 2 bytes @ 0xE
   979                           
   980     0056                     secuencia7@var4:	
   981                           ; 2 bytes @ 0xE
   982                           
   983                           
   984                           ; 2 bytes @ 0xE
   985     0056                     	ds	2
   986     0058                     keypad_getkey@valor:
   987                           
   988                           ; 1 bytes @ 0x10
   989     0058                     	ds	1
   990     0059                     keypad_getkey@i:
   991                           
   992                           ; 2 bytes @ 0x11
   993     0059                     	ds	2
   994     005B                     ??_main:
   995                           
   996                           ; 1 bytes @ 0x13
   997     005B                     	ds	3
   998                           
   999                           	psect	maintext
  1000     0672                     __pmaintext:	
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 79 in file "main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  key             1   12[COMMON] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : B00/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0
  1022 ;;      Temps:          0       3       0       0       0
  1023 ;;      Totals:         1       3       0       0       0
  1024 ;;Total ram usage:        4 bytes
  1025 ;; Hardware stack levels required when called: 4
  1026 ;; This function calls:
  1027 ;;		_LCD_Char
  1028 ;;		_LCD_Clear
  1029 ;;		_LCD_Command
  1030 ;;		_LCD_Init
  1031 ;;		_LCD_String_xy
  1032 ;;		_Lmain
  1033 ;;		_blink_led
  1034 ;;		_keypad_getkey
  1035 ;;		_keypad_init
  1036 ;;		_monitoreo
  1037 ;;		_secuencia5
  1038 ;;		_secuencia6
  1039 ;;		_secuencia7
  1040 ;;		_strncmp
  1041 ;; This function is called by:
  1042 ;;		Startup code after reset
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046     0672                     _main:	
  1047                           ;psect for function _main
  1048                           
  1049     0672                     l1819:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1052                           
  1053                           
  1054                           ;main.c: 83:     OSCCON = 0x71;
  1055     0672  3071               	movlw	113
  1056     0673  1683               	bsf	3,5	;RP0=1, select bank1
  1057     0674  1303               	bcf	3,6	;RP1=0, select bank1
  1058     0675  008F               	movwf	15	;volatile
  1059     0676                     l1821:
  1060                           
  1061                           ;main.c: 85:     LCD_Init();
  1062     0676  120A  118A  2186  120A  118A  	fcall	_LCD_Init
  1063                           
  1064                           ;main.c: 87:     keypad_init();
  1065     067B  120A  118A  209B  120A  118A  	fcall	_keypad_init
  1066     0680                     l1823:
  1067                           
  1068                           ;main.c: 88:     TRISE = 0b00000000;
  1069     0680  1683               	bsf	3,5	;RP0=1, select bank1
  1070     0681  1303               	bcf	3,6	;RP1=0, select bank1
  1071     0682  0189               	clrf	9	;volatile
  1072     0683                     l1825:
  1073                           
  1074                           ;main.c: 89:     TRISA = 0b00000000;
  1075     0683  0185               	clrf	5	;volatile
  1076     0684                     l1827:
  1077                           
  1078                           ;main.c: 90:     ANSELH = 0x00;
  1079     0684  1683               	bsf	3,5	;RP0=1, select bank3
  1080     0685  1703               	bsf	3,6	;RP1=1, select bank3
  1081     0686  0189               	clrf	9	;volatile
  1082     0687                     l1829:
  1083                           
  1084                           ;main.c: 91:     Lmain();
  1085     0687  120A  118A  2249  120A  118A  	fcall	_Lmain
  1086     068C                     l1831:
  1087                           
  1088                           ;main.c: 92:     TRISD = 0b00000000;
  1089     068C  1683               	bsf	3,5	;RP0=1, select bank1
  1090     068D  1303               	bcf	3,6	;RP1=0, select bank1
  1091     068E  0188               	clrf	8	;volatile
  1092     068F                     l1833:
  1093                           
  1094                           ;main.c: 94:     TRISAbits.TRISA0 = 1;
  1095     068F  1405               	bsf	5,0	;volatile
  1096     0690                     l1835:
  1097                           
  1098                           ;main.c: 95:     TRISAbits.TRISA1 = 1;
  1099     0690  1485               	bsf	5,1	;volatile
  1100     0691                     l1837:
  1101                           
  1102                           ;main.c: 96:     TRISAbits.TRISA2 = 1;
  1103     0691  1505               	bsf	5,2	;volatile
  1104     0692                     l1839:
  1105                           
  1106                           ;main.c: 100:         LCD_String_xy(0,0,"Press a Key");
  1107     0692  01F4               	clrf	LCD_String_xy@pos
  1108     0693  3048               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1109     0694  00F5               	movwf	LCD_String_xy@msg
  1110     0695  3000               	movlw	0
  1111     0696  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  1112                           
  1113                           ;main.c: 101:         LCD_Char(2);
  1114     069B  3002               	movlw	2
  1115     069C  120A  118A  2213  120A  118A  	fcall	_LCD_Char
  1116                           
  1117                           ;main.c: 102:         LCD_Command(0xC0);
  1118     06A1  30C0               	movlw	192
  1119     06A2  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  1120     06A7                     l1841:
  1121                           
  1122                           ;main.c: 107:             key = keypad_getkey();
  1123     06A7  120A  118A  24A2  120A  118A  	fcall	_keypad_getkey
  1124     06AC  00FC               	movwf	main@key
  1125     06AD                     l1843:
  1126                           
  1127                           ;main.c: 108:             if(key != 0){
  1128     06AD  087C               	movf	main@key,w
  1129     06AE  1903               	btfsc	3,2
  1130     06AF  2EB1               	goto	u1101
  1131     06B0  2EB2               	goto	u1100
  1132     06B1                     u1101:
  1133     06B1  2EC0               	goto	l1851
  1134     06B2                     u1100:
  1135     06B2                     l1845:
  1136                           
  1137                           ;main.c: 109:                 LCD_Char('*');
  1138     06B2  302A               	movlw	42
  1139     06B3  120A  118A  2213  120A  118A  	fcall	_LCD_Char
  1140     06B8                     l1847:
  1141                           
  1142                           ;main.c: 111:                 pass_user[idx++] = key;
  1143     06B8  087D               	movf	_idx,w
  1144     06B9  3E60               	addlw	(low (_pass_user| 0))& (0+255)
  1145     06BA  0084               	movwf	4
  1146     06BB  087C               	movf	main@key,w
  1147     06BC  1383               	bcf	3,7	;select IRP bank0
  1148     06BD  0080               	movwf	0
  1149     06BE                     l1849:
  1150     06BE  3001               	movlw	1
  1151     06BF  07FD               	addwf	_idx,f
  1152     06C0                     l1851:
  1153                           
  1154                           ;main.c: 113:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1155     06C0  3002               	movlw	2
  1156     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1157     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1158     06C3  00DD               	movwf	??_main+2
  1159     06C4  3004               	movlw	4
  1160     06C5  00DC               	movwf	??_main+1
  1161     06C6  30B9               	movlw	185
  1162     06C7  00DB               	movwf	??_main
  1163     06C8                     u1177:
  1164     06C8  0BDB               	decfsz	??_main,f
  1165     06C9  2EC8               	goto	u1177
  1166     06CA  0BDC               	decfsz	??_main+1,f
  1167     06CB  2EC8               	goto	u1177
  1168     06CC  0BDD               	decfsz	??_main+2,f
  1169     06CD  2EC8               	goto	u1177
  1170     06CE  2ECF               	nop2
  1171     06CF                     l1853:
  1172                           
  1173                           ;main.c: 114:         }while(idx < 5);
  1174     06CF  3005               	movlw	5
  1175     06D0  027D               	subwf	_idx,w
  1176     06D1  1C03               	skipc
  1177     06D2  2ED4               	goto	u1111
  1178     06D3  2ED5               	goto	u1110
  1179     06D4                     u1111:
  1180     06D4  2EA7               	goto	l1841
  1181     06D5                     u1110:
  1182     06D5                     l1855:
  1183                           
  1184                           ;main.c: 116:         if(strncmp(pass_user,password,4)==0){
  1185     06D5  3060               	movlw	(low (_pass_user| 0))& (0+255)
  1186     06D6  00F0               	movwf	strncmp@l
  1187     06D7  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1188     06D8  00F1               	movwf	strncmp@r
  1189     06D9  3004               	movlw	4
  1190     06DA  00F2               	movwf	strncmp@n
  1191     06DB  3000               	movlw	0
  1192     06DC  00F3               	movwf	strncmp@n+1
  1193     06DD  120A  118A  229A  120A  118A  	fcall	_strncmp
  1194     06E2  0870               	movf	?_strncmp,w
  1195     06E3  0471               	iorwf	?_strncmp+1,w
  1196     06E4  1D03               	btfss	3,2
  1197     06E5  2EE7               	goto	u1121
  1198     06E6  2EE8               	goto	u1120
  1199     06E7                     u1121:
  1200     06E7  2F6B               	goto	l1893
  1201     06E8                     u1120:
  1202     06E8                     l1857:
  1203                           
  1204                           ;main.c: 117:             LCD_Clear();
  1205     06E8  120A  118A  20A3  120A  118A  	fcall	_LCD_Clear
  1206     06ED                     l1859:
  1207                           
  1208                           ;main.c: 118:             LCD_String_xy(0,0,"Clave Correcta");
  1209     06ED  01F4               	clrf	LCD_String_xy@pos
  1210     06EE  3039               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1211     06EF  00F5               	movwf	LCD_String_xy@msg
  1212     06F0  3000               	movlw	0
  1213     06F1  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  1214     06F6                     l1861:
  1215                           
  1216                           ;main.c: 119:             blink_led('V', 500, 500, 3000);
  1217     06F6  30F4               	movlw	244
  1218     06F7  00F4               	movwf	blink_led@on_time
  1219     06F8  3001               	movlw	1
  1220     06F9  00F5               	movwf	blink_led@on_time+1
  1221     06FA  30F4               	movlw	244
  1222     06FB  00F6               	movwf	blink_led@off_time
  1223     06FC  3001               	movlw	1
  1224     06FD  00F7               	movwf	blink_led@off_time+1
  1225     06FE  30B8               	movlw	184
  1226     06FF  00F8               	movwf	blink_led@duration
  1227     0700  300B               	movlw	11
  1228     0701  00F9               	movwf	blink_led@duration+1
  1229     0702  3056               	movlw	86
  1230     0703  120A  118A  22F2  120A  118A  	fcall	_blink_led
  1231     0708                     l1863:
  1232                           
  1233                           ;main.c: 120:             intentos = 0;
  1234     0708  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0709  1303               	bcf	3,6	;RP1=0, select bank0
  1236     070A  01DE               	clrf	_intentos
  1237     070B  01DF               	clrf	_intentos+1
  1238     070C                     l1865:
  1239                           
  1240                           ;main.c: 121:             if (PORTAbits.RA0) {
  1241     070C  1C05               	btfss	5,0	;volatile
  1242     070D  2F0F               	goto	u1131
  1243     070E  2F10               	goto	u1130
  1244     070F                     u1131:
  1245     070F  2F39               	goto	l88
  1246     0710                     u1130:
  1247     0710                     l1867:
  1248                           
  1249                           ;main.c: 122:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1250     0710  3002               	movlw	2
  1251     0711  1283               	bcf	3,5	;RP0=0, select bank0
  1252     0712  1303               	bcf	3,6	;RP1=0, select bank0
  1253     0713  00DD               	movwf	??_main+2
  1254     0714  3004               	movlw	4
  1255     0715  00DC               	movwf	??_main+1
  1256     0716  30B9               	movlw	185
  1257     0717  00DB               	movwf	??_main
  1258     0718                     u1187:
  1259     0718  0BDB               	decfsz	??_main,f
  1260     0719  2F18               	goto	u1187
  1261     071A  0BDC               	decfsz	??_main+1,f
  1262     071B  2F18               	goto	u1187
  1263     071C  0BDD               	decfsz	??_main+2,f
  1264     071D  2F18               	goto	u1187
  1265     071E  2F1F               	nop2
  1266     071F                     l1869:
  1267                           
  1268                           ;main.c: 123:                 secuencia5();
  1269     071F  120A  118A  2583  120A  118A  	fcall	_secuencia5
  1270     0724                     l1871:
  1271                           
  1272                           ;main.c: 124:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  1273     0724  3015               	movlw	21
  1274     0725  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0726  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0727  00DD               	movwf	??_main+2
  1277     0728  304B               	movlw	75
  1278     0729  00DC               	movwf	??_main+1
  1279     072A  30BD               	movlw	189
  1280     072B  00DB               	movwf	??_main
  1281     072C                     u1197:
  1282     072C  0BDB               	decfsz	??_main,f
  1283     072D  2F2C               	goto	u1197
  1284     072E  0BDC               	decfsz	??_main+1,f
  1285     072F  2F2C               	goto	u1197
  1286     0730  0BDD               	decfsz	??_main+2,f
  1287     0731  2F2C               	goto	u1197
  1288     0732  2F33               	nop2
  1289     0733                     l1873:
  1290                           
  1291                           ;main.c: 125:                 monitoreo();
  1292     0733  120A  118A  211E  120A  118A  	fcall	_monitoreo
  1293                           
  1294                           ;main.c: 126:             }
  1295     0738  2FC0               	goto	l1911
  1296     0739                     l88:	
  1297                           ;main.c: 127:             else if (PORTAbits.RA1) {
  1298                           
  1299     0739  1C85               	btfss	5,1	;volatile
  1300     073A  2F3C               	goto	u1141
  1301     073B  2F3D               	goto	u1140
  1302     073C                     u1141:
  1303     073C  2F52               	goto	l90
  1304     073D                     u1140:
  1305     073D                     l1875:
  1306                           
  1307                           ;main.c: 128:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1308     073D  3002               	movlw	2
  1309     073E  1283               	bcf	3,5	;RP0=0, select bank0
  1310     073F  1303               	bcf	3,6	;RP1=0, select bank0
  1311     0740  00DD               	movwf	??_main+2
  1312     0741  3004               	movlw	4
  1313     0742  00DC               	movwf	??_main+1
  1314     0743  30B9               	movlw	185
  1315     0744  00DB               	movwf	??_main
  1316     0745                     u1207:
  1317     0745  0BDB               	decfsz	??_main,f
  1318     0746  2F45               	goto	u1207
  1319     0747  0BDC               	decfsz	??_main+1,f
  1320     0748  2F45               	goto	u1207
  1321     0749  0BDD               	decfsz	??_main+2,f
  1322     074A  2F45               	goto	u1207
  1323     074B  2F4C               	nop2
  1324     074C                     l1877:
  1325                           
  1326                           ;main.c: 129:                 secuencia6();
  1327     074C  120A  118A  23F4  120A  118A  	fcall	_secuencia6
  1328     0751  2F24               	goto	l1871
  1329     0752                     l90:	
  1330                           ;main.c: 133:             else if (PORTAbits.RA2) {
  1331                           
  1332     0752  1D05               	btfss	5,2	;volatile
  1333     0753  2F55               	goto	u1151
  1334     0754  2F56               	goto	u1150
  1335     0755                     u1151:
  1336     0755  2F33               	goto	l1873
  1337     0756                     u1150:
  1338     0756                     l1883:
  1339                           
  1340                           ;main.c: 134:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  1341     0756  3002               	movlw	2
  1342     0757  1283               	bcf	3,5	;RP0=0, select bank0
  1343     0758  1303               	bcf	3,6	;RP1=0, select bank0
  1344     0759  00DD               	movwf	??_main+2
  1345     075A  3004               	movlw	4
  1346     075B  00DC               	movwf	??_main+1
  1347     075C  30B9               	movlw	185
  1348     075D  00DB               	movwf	??_main
  1349     075E                     u1217:
  1350     075E  0BDB               	decfsz	??_main,f
  1351     075F  2F5E               	goto	u1217
  1352     0760  0BDC               	decfsz	??_main+1,f
  1353     0761  2F5E               	goto	u1217
  1354     0762  0BDD               	decfsz	??_main+2,f
  1355     0763  2F5E               	goto	u1217
  1356     0764  2F65               	nop2
  1357     0765                     l1885:
  1358                           
  1359                           ;main.c: 135:                 secuencia7();
  1360     0765  120A  118A  2355  120A  118A  	fcall	_secuencia7
  1361     076A  2F24               	goto	l1871
  1362     076B                     l1893:
  1363                           
  1364                           ;main.c: 146:             LCD_Clear();
  1365     076B  120A  118A  20A3  120A  118A  	fcall	_LCD_Clear
  1366     0770                     l1895:
  1367                           
  1368                           ;main.c: 147:             LCD_String_xy(0,0,"Clave Incorrecta");
  1369     0770  01F4               	clrf	LCD_String_xy@pos
  1370     0771  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1371     0772  00F5               	movwf	LCD_String_xy@msg
  1372     0773  3000               	movlw	0
  1373     0774  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  1374     0779                     l1897:
  1375                           
  1376                           ;main.c: 148:             blink_led('A', 300, 700, 2000);
  1377     0779  302C               	movlw	44
  1378     077A  00F4               	movwf	blink_led@on_time
  1379     077B  3001               	movlw	1
  1380     077C  00F5               	movwf	blink_led@on_time+1
  1381     077D  30BC               	movlw	188
  1382     077E  00F6               	movwf	blink_led@off_time
  1383     077F  3002               	movlw	2
  1384     0780  00F7               	movwf	blink_led@off_time+1
  1385     0781  30D0               	movlw	208
  1386     0782  00F8               	movwf	blink_led@duration
  1387     0783  3007               	movlw	7
  1388     0784  00F9               	movwf	blink_led@duration+1
  1389     0785  3041               	movlw	65
  1390     0786  120A  118A  22F2  120A  118A  	fcall	_blink_led
  1391     078B                     l1899:
  1392                           
  1393                           ;main.c: 149:             intentos = intentos + 1;
  1394     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1395     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1396     078D  085E               	movf	_intentos,w
  1397     078E  3E01               	addlw	1
  1398     078F  00DE               	movwf	_intentos
  1399     0790  085F               	movf	_intentos+1,w
  1400     0791  1803               	skipnc
  1401     0792  3E01               	addlw	1
  1402     0793  3E00               	addlw	0
  1403     0794  00DF               	movwf	_intentos+1
  1404     0795                     l1901:
  1405                           
  1406                           ;main.c: 150:             if(intentos ==3){
  1407     0795  3003               	movlw	3
  1408     0796  065E               	xorwf	_intentos,w
  1409     0797  045F               	iorwf	_intentos+1,w
  1410     0798  1D03               	btfss	3,2
  1411     0799  2F9B               	goto	u1161
  1412     079A  2F9C               	goto	u1160
  1413     079B                     u1161:
  1414     079B  2FC0               	goto	l1911
  1415     079C                     u1160:
  1416     079C                     l1903:
  1417                           
  1418                           ;main.c: 151:                 LCD_Clear();
  1419     079C  120A  118A  20A3  120A  118A  	fcall	_LCD_Clear
  1420     07A1                     l1905:
  1421                           
  1422                           ;main.c: 152:                 LCD_String_xy(0,0,"sistema bloqueado");
  1423     07A1  01F4               	clrf	LCD_String_xy@pos
  1424     07A2  3006               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1425     07A3  00F5               	movwf	LCD_String_xy@msg
  1426     07A4  3000               	movlw	0
  1427     07A5  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  1428     07AA                     l1907:
  1429                           
  1430                           ;main.c: 153:                 blink_led('R', 300, 500, 8000);
  1431     07AA  302C               	movlw	44
  1432     07AB  00F4               	movwf	blink_led@on_time
  1433     07AC  3001               	movlw	1
  1434     07AD  00F5               	movwf	blink_led@on_time+1
  1435     07AE  30F4               	movlw	244
  1436     07AF  00F6               	movwf	blink_led@off_time
  1437     07B0  3001               	movlw	1
  1438     07B1  00F7               	movwf	blink_led@off_time+1
  1439     07B2  3040               	movlw	64
  1440     07B3  00F8               	movwf	blink_led@duration
  1441     07B4  301F               	movlw	31
  1442     07B5  00F9               	movwf	blink_led@duration+1
  1443     07B6  3052               	movlw	82
  1444     07B7  120A  118A  22F2  120A  118A  	fcall	_blink_led
  1445     07BC                     l1909:
  1446                           
  1447                           ;main.c: 154:                 intentos = 0;
  1448     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  1449     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  1450     07BE  01DE               	clrf	_intentos
  1451     07BF  01DF               	clrf	_intentos+1
  1452     07C0                     l1911:
  1453                           
  1454                           ;main.c: 160:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1455     07C0  3015               	movlw	21
  1456     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1457     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1458     07C3  00DD               	movwf	??_main+2
  1459     07C4  304B               	movlw	75
  1460     07C5  00DC               	movwf	??_main+1
  1461     07C6  30BD               	movlw	189
  1462     07C7  00DB               	movwf	??_main
  1463     07C8                     u1227:
  1464     07C8  0BDB               	decfsz	??_main,f
  1465     07C9  2FC8               	goto	u1227
  1466     07CA  0BDC               	decfsz	??_main+1,f
  1467     07CB  2FC8               	goto	u1227
  1468     07CC  0BDD               	decfsz	??_main+2,f
  1469     07CD  2FC8               	goto	u1227
  1470     07CE  2FCF               	nop2
  1471     07CF                     l1913:
  1472                           
  1473                           ;main.c: 161:         LCD_Clear();
  1474     07CF  120A  118A  20A3  120A  118A  	fcall	_LCD_Clear
  1475     07D4                     l1915:
  1476                           
  1477                           ;main.c: 162:         idx = 0;
  1478     07D4  01FD               	clrf	_idx
  1479     07D5  2E92               	goto	l1839
  1480     07D6  120A  118A  2800   	ljmp	start
  1481     07D9                     __end_of_main:
  1482                           
  1483                           	psect	text1
  1484     029A                     __ptext1:	
  1485 ;; *************** function _strncmp *****************
  1486 ;; Defined at:
  1487 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  l               1    0[COMMON] PTR const unsigned char 
  1490 ;;		 -> pass_user(5), 
  1491 ;;  r               1    1[COMMON] PTR const unsigned char 
  1492 ;;		 -> password(5), 
  1493 ;;  n               2    2[COMMON] unsigned int 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2    0[COMMON] int 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         4       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          2       0       0       0       0
  1508 ;;      Totals:         6       0       0       0       0
  1509 ;;Total ram usage:        6 bytes
  1510 ;; Hardware stack levels used: 2
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518     029A                     _strncmp:	
  1519                           ;psect for function _strncmp
  1520                           
  1521     029A                     l1635:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1524                           
  1525     029A  3001               	movlw	1
  1526     029B  02F2               	subwf	strncmp@n,f
  1527     029C  3000               	movlw	0
  1528     029D  1C03               	skipc
  1529     029E  03F3               	decf	strncmp@n+1,f
  1530     029F  02F3               	subwf	strncmp@n+1,f
  1531     02A0  0A72               	incf	strncmp@n,w
  1532     02A1  1D03               	skipz
  1533     02A2  2AA7               	goto	u991
  1534     02A3  0A73               	incf	strncmp@n+1,w
  1535     02A4  1D03               	btfss	3,2
  1536     02A5  2AA7               	goto	u991
  1537     02A6  2AA8               	goto	u990
  1538     02A7                     u991:
  1539     02A7  2AB5               	goto	l1645
  1540     02A8                     u990:
  1541     02A8                     l1637:
  1542     02A8  01F0               	clrf	?_strncmp
  1543     02A9  01F1               	clrf	?_strncmp+1
  1544     02AA  2AF1               	goto	l794
  1545     02AB                     l1641:
  1546     02AB  3001               	movlw	1
  1547     02AC  07F0               	addwf	strncmp@l,f
  1548     02AD  3001               	movlw	1
  1549     02AE  07F1               	addwf	strncmp@r,f
  1550     02AF                     l1643:
  1551     02AF  3001               	movlw	1
  1552     02B0  02F2               	subwf	strncmp@n,f
  1553     02B1  3000               	movlw	0
  1554     02B2  1C03               	skipc
  1555     02B3  03F3               	decf	strncmp@n+1,f
  1556     02B4  02F3               	subwf	strncmp@n+1,f
  1557     02B5                     l1645:
  1558     02B5  0870               	movf	strncmp@l,w
  1559     02B6  0084               	movwf	4
  1560     02B7  1383               	bcf	3,7	;select IRP bank0
  1561     02B8  0800               	movf	0,w
  1562     02B9  1903               	btfsc	3,2
  1563     02BA  2ABC               	goto	u1001
  1564     02BB  2ABD               	goto	u1000
  1565     02BC                     u1001:
  1566     02BC  2ADF               	goto	l1653
  1567     02BD                     u1000:
  1568     02BD                     l1647:
  1569     02BD  0871               	movf	strncmp@r,w
  1570     02BE  0084               	movwf	4
  1571     02BF  120A  118A  2003  120A  118A  	fcall	stringdir
  1572     02C4  3A00               	xorlw	0
  1573     02C5  1903               	skipnz
  1574     02C6  2AC8               	goto	u1011
  1575     02C7  2AC9               	goto	u1010
  1576     02C8                     u1011:
  1577     02C8  2ADF               	goto	l1653
  1578     02C9                     u1010:
  1579     02C9                     l1649:
  1580     02C9  0872               	movf	strncmp@n,w
  1581     02CA  0473               	iorwf	strncmp@n+1,w
  1582     02CB  1903               	btfsc	3,2
  1583     02CC  2ACE               	goto	u1021
  1584     02CD  2ACF               	goto	u1020
  1585     02CE                     u1021:
  1586     02CE  2ADF               	goto	l1653
  1587     02CF                     u1020:
  1588     02CF                     l1651:
  1589     02CF  0871               	movf	strncmp@r,w
  1590     02D0  0084               	movwf	4
  1591     02D1  120A  118A  2003  120A  118A  	fcall	stringdir
  1592     02D6  00F4               	movwf	??_strncmp
  1593     02D7  0870               	movf	strncmp@l,w
  1594     02D8  0084               	movwf	4
  1595     02D9  0800               	movf	0,w
  1596     02DA  0674               	xorwf	??_strncmp,w
  1597     02DB  1903               	skipnz
  1598     02DC  2ADE               	goto	u1031
  1599     02DD  2ADF               	goto	u1030
  1600     02DE                     u1031:
  1601     02DE  2AAB               	goto	l1641
  1602     02DF                     u1030:
  1603     02DF                     l1653:
  1604     02DF  0871               	movf	strncmp@r,w
  1605     02E0  0084               	movwf	4
  1606     02E1  120A  118A  2003  120A  118A  	fcall	stringdir
  1607     02E6  00F4               	movwf	??_strncmp
  1608     02E7  0870               	movf	strncmp@l,w
  1609     02E8  0084               	movwf	4
  1610     02E9  0800               	movf	0,w
  1611     02EA  00F5               	movwf	??_strncmp+1
  1612     02EB  0874               	movf	??_strncmp,w
  1613     02EC  0275               	subwf	??_strncmp+1,w
  1614     02ED  00F0               	movwf	?_strncmp
  1615     02EE  01F1               	clrf	?_strncmp+1
  1616     02EF  1C03               	skipc
  1617     02F0  03F1               	decf	?_strncmp+1,f
  1618     02F1                     l794:
  1619     02F1  0008               	return
  1620     02F2                     __end_of_strncmp:
  1621                           
  1622                           	psect	text2
  1623     0355                     __ptext2:	
  1624 ;; *************** function _secuencia7 *****************
  1625 ;; Defined at:
  1626 ;;		line 230 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  i               2    2[BANK0 ] int 
  1631 ;;  i               2    0[BANK0 ] int 
  1632 ;;  var4            2   14[BANK0 ] volatile unsigned int 
  1633 ;;  var2            2   12[BANK0 ] volatile unsigned int 
  1634 ;;  var3            2   10[BANK0 ] volatile unsigned int 
  1635 ;;  var1            2    8[BANK0 ] volatile unsigned int 
  1636 ;;  var34           2    6[BANK0 ] volatile unsigned int 
  1637 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, btemp+1
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0      16       0       0       0
  1649 ;;      Temps:          3       0       0       0       0
  1650 ;;      Totals:         3      16       0       0       0
  1651 ;;Total ram usage:       19 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660     0355                     _secuencia7:	
  1661                           ;psect for function _secuencia7
  1662                           
  1663     0355                     l1763:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _secuencia7: [wreg+status,2+status,0+btemp+1]
  1666                           
  1667                           
  1668                           ;main.c: 231: volatile unsigned int var1=0x01,var2=0x80,var12 = 0;
  1669     0355  3001               	movlw	1
  1670     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1671     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1672     0358  00D0               	movwf	secuencia7@var1	;volatile
  1673     0359  3000               	movlw	0
  1674     035A  00D1               	movwf	secuencia7@var1+1	;volatile
  1675     035B  3080               	movlw	128
  1676     035C  00D4               	movwf	secuencia7@var2	;volatile
  1677     035D  3000               	movlw	0
  1678     035E  00D5               	movwf	secuencia7@var2+1	;volatile
  1679     035F                     l1765:
  1680     035F  01CC               	clrf	secuencia7@var12	;volatile
  1681     0360  01CD               	clrf	secuencia7@var12+1	;volatile
  1682     0361                     l1767:
  1683                           
  1684                           ;main.c: 233:     for (int i = 0; i < 4; i++) {
  1685     0361  01C8               	clrf	secuencia7@i
  1686     0362  01C9               	clrf	secuencia7@i+1
  1687     0363                     l1773:
  1688                           
  1689                           ;main.c: 234:         var12 = var1 | var2;
  1690     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1691     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1692     0365  0854               	movf	secuencia7@var2,w	;volatile
  1693     0366  0450               	iorwf	secuencia7@var1,w	;volatile
  1694     0367  00CC               	movwf	secuencia7@var12	;volatile
  1695     0368  0855               	movf	secuencia7@var2+1,w	;volatile
  1696     0369  0451               	iorwf	secuencia7@var1+1,w	;volatile
  1697     036A  00CD               	movwf	secuencia7@var12+1	;volatile
  1698                           
  1699                           ;main.c: 236:         PORTD = (unsigned char)(var12);
  1700     036B  084C               	movf	secuencia7@var12,w	;volatile
  1701     036C  0088               	movwf	8	;volatile
  1702                           
  1703                           ;main.c: 237:          _delay((unsigned long)((500)*(8000000/4000.0)));
  1704     036D  3006               	movlw	6
  1705     036E  00F2               	movwf	??_secuencia7+2
  1706     036F  3013               	movlw	19
  1707     0370  00F1               	movwf	??_secuencia7+1
  1708     0371  30AD               	movlw	173
  1709     0372  00F0               	movwf	??_secuencia7
  1710     0373                     u1237:
  1711     0373  0BF0               	decfsz	??_secuencia7,f
  1712     0374  2B73               	goto	u1237
  1713     0375  0BF1               	decfsz	??_secuencia7+1,f
  1714     0376  2B73               	goto	u1237
  1715     0377  0BF2               	decfsz	??_secuencia7+2,f
  1716     0378  2B73               	goto	u1237
  1717     0379  2B7A               	nop2
  1718     037A                     l1775:
  1719                           
  1720                           ;main.c: 238:         STATUSbits.CARRY = 0;
  1721     037A  1283               	bcf	3,5	;RP0=0, select bank0
  1722     037B  1303               	bcf	3,6	;RP1=0, select bank0
  1723     037C  1003               	bcf	3,0	;volatile
  1724                           
  1725                           ;main.c: 239:         var1 = var1 << 1;
  1726     037D  1003               	clrc
  1727     037E  0D50               	rlf	secuencia7@var1,w	;volatile
  1728     037F  00D0               	movwf	secuencia7@var1	;volatile
  1729     0380  0D51               	rlf	secuencia7@var1+1,w	;volatile
  1730     0381  00D1               	movwf	secuencia7@var1+1	;volatile
  1731     0382                     l1777:
  1732                           
  1733                           ;main.c: 240:         STATUSbits.CARRY = 0;
  1734     0382  1003               	bcf	3,0	;volatile
  1735     0383                     l1779:
  1736                           
  1737                           ;main.c: 241:         var2 = var2 >> 1;
  1738     0383  0855               	movf	secuencia7@var2+1,w	;volatile
  1739     0384  00F1               	movwf	??_secuencia7+1
  1740     0385  0854               	movf	secuencia7@var2,w	;volatile
  1741     0386  00F0               	movwf	??_secuencia7
  1742     0387  1003               	clrc
  1743     0388  0CF1               	rrf	??_secuencia7+1,f
  1744     0389  0CF0               	rrf	??_secuencia7,f
  1745     038A  0870               	movf	??_secuencia7,w
  1746     038B  00D4               	movwf	secuencia7@var2	;volatile
  1747     038C  0871               	movf	??_secuencia7+1,w
  1748     038D  00D5               	movwf	secuencia7@var2+1	;volatile
  1749     038E                     l1781:
  1750                           
  1751                           ;main.c: 242:         STATUSbits.CARRY = 0;
  1752     038E  1003               	bcf	3,0	;volatile
  1753     038F                     l1783:
  1754                           
  1755                           ;main.c: 243:         var2 |= (1 << 7);
  1756     038F  17D4               	bsf	secuencia7@var2,7	;volatile
  1757     0390                     l1785:
  1758                           
  1759                           ;main.c: 244:         STATUSbits.CARRY = 0;
  1760     0390  1003               	bcf	3,0	;volatile
  1761     0391                     l1787:
  1762                           
  1763                           ;main.c: 246:     }
  1764     0391  3001               	movlw	1
  1765     0392  07C8               	addwf	secuencia7@i,f
  1766     0393  1803               	skipnc
  1767     0394  0AC9               	incf	secuencia7@i+1,f
  1768     0395  3000               	movlw	0
  1769     0396  07C9               	addwf	secuencia7@i+1,f
  1770     0397                     l1789:
  1771     0397  0849               	movf	secuencia7@i+1,w
  1772     0398  3A80               	xorlw	128
  1773     0399  00FF               	movwf	btemp+1
  1774     039A  3080               	movlw	128
  1775     039B  027F               	subwf	btemp+1,w
  1776     039C  1D03               	skipz
  1777     039D  2BA0               	goto	u1085
  1778     039E  3004               	movlw	4
  1779     039F  0248               	subwf	secuencia7@i,w
  1780     03A0                     u1085:
  1781     03A0  1C03               	skipc
  1782     03A1  2BA3               	goto	u1081
  1783     03A2  2BA4               	goto	u1080
  1784     03A3                     u1081:
  1785     03A3  2B63               	goto	l1773
  1786     03A4                     u1080:
  1787     03A4                     l1791:
  1788                           
  1789                           ;main.c: 248: volatile unsigned int var3=0x10,var4=0x08,var34=0 ;
  1790     03A4  3010               	movlw	16
  1791     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1792     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1793     03A7  00D2               	movwf	secuencia7@var3	;volatile
  1794     03A8  3000               	movlw	0
  1795     03A9  00D3               	movwf	secuencia7@var3+1	;volatile
  1796     03AA  3008               	movlw	8
  1797     03AB  00D6               	movwf	secuencia7@var4	;volatile
  1798     03AC  3000               	movlw	0
  1799     03AD  00D7               	movwf	secuencia7@var4+1	;volatile
  1800     03AE                     l1793:
  1801     03AE  01CE               	clrf	secuencia7@var34	;volatile
  1802     03AF  01CF               	clrf	secuencia7@var34+1	;volatile
  1803     03B0                     l1795:
  1804                           
  1805                           ;main.c: 249:     for (int i = 0; i < 4; i++) {
  1806     03B0  01CA               	clrf	secuencia7@i_261
  1807     03B1  01CB               	clrf	secuencia7@i_261+1
  1808     03B2                     l1801:
  1809                           
  1810                           ;main.c: 250:         var34 = var3 | var4;
  1811     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1812     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1813     03B4  0856               	movf	secuencia7@var4,w	;volatile
  1814     03B5  0452               	iorwf	secuencia7@var3,w	;volatile
  1815     03B6  00CE               	movwf	secuencia7@var34	;volatile
  1816     03B7  0857               	movf	secuencia7@var4+1,w	;volatile
  1817     03B8  0453               	iorwf	secuencia7@var3+1,w	;volatile
  1818     03B9  00CF               	movwf	secuencia7@var34+1	;volatile
  1819                           
  1820                           ;main.c: 251:         PORTD = (unsigned char)(var34);
  1821     03BA  084E               	movf	secuencia7@var34,w	;volatile
  1822     03BB  0088               	movwf	8	;volatile
  1823                           
  1824                           ;main.c: 252:          _delay((unsigned long)((500)*(8000000/4000.0)));
  1825     03BC  3006               	movlw	6
  1826     03BD  00F2               	movwf	??_secuencia7+2
  1827     03BE  3013               	movlw	19
  1828     03BF  00F1               	movwf	??_secuencia7+1
  1829     03C0  30AD               	movlw	173
  1830     03C1  00F0               	movwf	??_secuencia7
  1831     03C2                     u1247:
  1832     03C2  0BF0               	decfsz	??_secuencia7,f
  1833     03C3  2BC2               	goto	u1247
  1834     03C4  0BF1               	decfsz	??_secuencia7+1,f
  1835     03C5  2BC2               	goto	u1247
  1836     03C6  0BF2               	decfsz	??_secuencia7+2,f
  1837     03C7  2BC2               	goto	u1247
  1838     03C8  2BC9               	nop2
  1839     03C9                     l1803:
  1840                           
  1841                           ;main.c: 253:         STATUSbits.CARRY = 0;
  1842     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1843     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1844     03CB  1003               	bcf	3,0	;volatile
  1845                           
  1846                           ;main.c: 254:         var3 = var3 << 1;
  1847     03CC  1003               	clrc
  1848     03CD  0D52               	rlf	secuencia7@var3,w	;volatile
  1849     03CE  00D2               	movwf	secuencia7@var3	;volatile
  1850     03CF  0D53               	rlf	secuencia7@var3+1,w	;volatile
  1851     03D0  00D3               	movwf	secuencia7@var3+1	;volatile
  1852     03D1                     l1805:
  1853                           
  1854                           ;main.c: 255:         STATUSbits.CARRY = 0;
  1855     03D1  1003               	bcf	3,0	;volatile
  1856     03D2                     l1807:
  1857                           
  1858                           ;main.c: 256:         var4 = var4 >> 1;
  1859     03D2  0857               	movf	secuencia7@var4+1,w	;volatile
  1860     03D3  00F1               	movwf	??_secuencia7+1
  1861     03D4  0856               	movf	secuencia7@var4,w	;volatile
  1862     03D5  00F0               	movwf	??_secuencia7
  1863     03D6  1003               	clrc
  1864     03D7  0CF1               	rrf	??_secuencia7+1,f
  1865     03D8  0CF0               	rrf	??_secuencia7,f
  1866     03D9  0870               	movf	??_secuencia7,w
  1867     03DA  00D6               	movwf	secuencia7@var4	;volatile
  1868     03DB  0871               	movf	??_secuencia7+1,w
  1869     03DC  00D7               	movwf	secuencia7@var4+1	;volatile
  1870     03DD                     l1809:
  1871                           
  1872                           ;main.c: 257:         STATUSbits.CARRY = 0;
  1873     03DD  1003               	bcf	3,0	;volatile
  1874     03DE                     l1811:
  1875                           
  1876                           ;main.c: 258:         var4 |= (1 << 3);
  1877     03DE  15D6               	bsf	secuencia7@var4,3	;volatile
  1878     03DF                     l1813:
  1879                           
  1880                           ;main.c: 259:         STATUSbits.CARRY = 0;
  1881     03DF  1003               	bcf	3,0	;volatile
  1882     03E0                     l1815:
  1883                           
  1884                           ;main.c: 261:     }
  1885     03E0  3001               	movlw	1
  1886     03E1  07CA               	addwf	secuencia7@i_261,f
  1887     03E2  1803               	skipnc
  1888     03E3  0ACB               	incf	secuencia7@i_261+1,f
  1889     03E4  3000               	movlw	0
  1890     03E5  07CB               	addwf	secuencia7@i_261+1,f
  1891     03E6                     l1817:
  1892     03E6  084B               	movf	secuencia7@i_261+1,w
  1893     03E7  3A80               	xorlw	128
  1894     03E8  00FF               	movwf	btemp+1
  1895     03E9  3080               	movlw	128
  1896     03EA  027F               	subwf	btemp+1,w
  1897     03EB  1D03               	skipz
  1898     03EC  2BEF               	goto	u1095
  1899     03ED  3004               	movlw	4
  1900     03EE  024A               	subwf	secuencia7@i_261,w
  1901     03EF                     u1095:
  1902     03EF  1C03               	skipc
  1903     03F0  2BF2               	goto	u1091
  1904     03F1  2BF3               	goto	u1090
  1905     03F2                     u1091:
  1906     03F2  2BB2               	goto	l1801
  1907     03F3                     u1090:
  1908     03F3                     l122:
  1909     03F3  0008               	return
  1910     03F4                     __end_of_secuencia7:
  1911                           
  1912                           	psect	text3
  1913     03F4                     __ptext3:	
  1914 ;; *************** function _secuencia6 *****************
  1915 ;; Defined at:
  1916 ;;		line 201 in file "main.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  i               2    2[BANK0 ] int 
  1921 ;;  i               2    0[BANK0 ] int 
  1922 ;;  var4            2   14[BANK0 ] volatile unsigned int 
  1923 ;;  var3            2   12[BANK0 ] volatile unsigned int 
  1924 ;;  var34           2   10[BANK0 ] volatile unsigned int 
  1925 ;;  var2            2    8[BANK0 ] volatile unsigned int 
  1926 ;;  var1            2    6[BANK0 ] volatile unsigned int 
  1927 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, btemp+1
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       0       0       0
  1938 ;;      Locals:         0      16       0       0       0
  1939 ;;      Temps:          3       0       0       0       0
  1940 ;;      Totals:         3      16       0       0       0
  1941 ;;Total ram usage:       19 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     03F4                     _secuencia6:	
  1951                           ;psect for function _secuencia6
  1952                           
  1953     03F4                     l1717:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _secuencia6: [wreg+status,2+status,0+btemp+1]
  1956                           
  1957                           
  1958                           ;main.c: 202: volatile unsigned int var1=0x01,var2=0x80,var12 = 0;
  1959     03F4  3001               	movlw	1
  1960     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1961     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1962     03F7  00CE               	movwf	secuencia6@var1	;volatile
  1963     03F8  3000               	movlw	0
  1964     03F9  00CF               	movwf	secuencia6@var1+1	;volatile
  1965     03FA  3080               	movlw	128
  1966     03FB  00D0               	movwf	secuencia6@var2	;volatile
  1967     03FC  3000               	movlw	0
  1968     03FD  00D1               	movwf	secuencia6@var2+1	;volatile
  1969     03FE                     l1719:
  1970     03FE  01CC               	clrf	secuencia6@var12	;volatile
  1971     03FF  01CD               	clrf	secuencia6@var12+1	;volatile
  1972     0400                     l1721:
  1973                           
  1974                           ;main.c: 203:     for (int i = 1; i < 5; i++) {
  1975     0400  3001               	movlw	1
  1976     0401  00C8               	movwf	secuencia6@i
  1977     0402  3000               	movlw	0
  1978     0403  00C9               	movwf	secuencia6@i+1
  1979     0404                     l1727:
  1980                           
  1981                           ;main.c: 205:             var12 = var2 | var1;
  1982     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1984     0406  084E               	movf	secuencia6@var1,w	;volatile
  1985     0407  0450               	iorwf	secuencia6@var2,w	;volatile
  1986     0408  00CC               	movwf	secuencia6@var12	;volatile
  1987     0409  084F               	movf	secuencia6@var1+1,w	;volatile
  1988     040A  0451               	iorwf	secuencia6@var2+1,w	;volatile
  1989     040B  00CD               	movwf	secuencia6@var12+1	;volatile
  1990                           
  1991                           ;main.c: 206:             PORTD = (unsigned char)(var12);
  1992     040C  084C               	movf	secuencia6@var12,w	;volatile
  1993     040D  0088               	movwf	8	;volatile
  1994                           
  1995                           ;main.c: 207:              _delay((unsigned long)((500)*(8000000/4000.0)));
  1996     040E  3006               	movlw	6
  1997     040F  00F2               	movwf	??_secuencia6+2
  1998     0410  3013               	movlw	19
  1999     0411  00F1               	movwf	??_secuencia6+1
  2000     0412  30AD               	movlw	173
  2001     0413  00F0               	movwf	??_secuencia6
  2002     0414                     u1257:
  2003     0414  0BF0               	decfsz	??_secuencia6,f
  2004     0415  2C14               	goto	u1257
  2005     0416  0BF1               	decfsz	??_secuencia6+1,f
  2006     0417  2C14               	goto	u1257
  2007     0418  0BF2               	decfsz	??_secuencia6+2,f
  2008     0419  2C14               	goto	u1257
  2009     041A  2C1B               	nop2
  2010     041B                     l1729:
  2011                           
  2012                           ;main.c: 208:             var1 = var1 + 2;
  2013     041B  1283               	bcf	3,5	;RP0=0, select bank0
  2014     041C  1303               	bcf	3,6	;RP1=0, select bank0
  2015     041D  084E               	movf	secuencia6@var1,w	;volatile
  2016     041E  3E02               	addlw	2
  2017     041F  00CE               	movwf	secuencia6@var1	;volatile
  2018     0420  084F               	movf	secuencia6@var1+1,w	;volatile
  2019     0421  1803               	skipnc
  2020     0422  3E01               	addlw	1
  2021     0423  3E00               	addlw	0
  2022     0424  00CF               	movwf	secuencia6@var1+1	;volatile
  2023     0425                     l1731:
  2024                           
  2025                           ;main.c: 209:             var2= var2 >> 1;
  2026     0425  0851               	movf	secuencia6@var2+1,w	;volatile
  2027     0426  00F1               	movwf	??_secuencia6+1
  2028     0427  0850               	movf	secuencia6@var2,w	;volatile
  2029     0428  00F0               	movwf	??_secuencia6
  2030     0429  1003               	clrc
  2031     042A  0CF1               	rrf	??_secuencia6+1,f
  2032     042B  0CF0               	rrf	??_secuencia6,f
  2033     042C  0870               	movf	??_secuencia6,w
  2034     042D  00D0               	movwf	secuencia6@var2	;volatile
  2035     042E  0871               	movf	??_secuencia6+1,w
  2036     042F  00D1               	movwf	secuencia6@var2+1	;volatile
  2037                           
  2038                           ;main.c: 210:            }
  2039     0430  3001               	movlw	1
  2040     0431  07C8               	addwf	secuencia6@i,f
  2041     0432  1803               	skipnc
  2042     0433  0AC9               	incf	secuencia6@i+1,f
  2043     0434  3000               	movlw	0
  2044     0435  07C9               	addwf	secuencia6@i+1,f
  2045     0436                     l1733:
  2046     0436  0849               	movf	secuencia6@i+1,w
  2047     0437  3A80               	xorlw	128
  2048     0438  00FF               	movwf	btemp+1
  2049     0439  3080               	movlw	128
  2050     043A  027F               	subwf	btemp+1,w
  2051     043B  1D03               	skipz
  2052     043C  2C3F               	goto	u1065
  2053     043D  3005               	movlw	5
  2054     043E  0248               	subwf	secuencia6@i,w
  2055     043F                     u1065:
  2056     043F  1C03               	skipc
  2057     0440  2C42               	goto	u1061
  2058     0441  2C43               	goto	u1060
  2059     0442                     u1061:
  2060     0442  2C04               	goto	l1727
  2061     0443                     u1060:
  2062     0443                     l1735:
  2063                           
  2064                           ;main.c: 211: volatile unsigned int var3=0x09,var4=0x10,var34 = 0;
  2065     0443  3009               	movlw	9
  2066     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2067     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2068     0446  00D4               	movwf	secuencia6@var3	;volatile
  2069     0447  3000               	movlw	0
  2070     0448  00D5               	movwf	secuencia6@var3+1	;volatile
  2071     0449  3010               	movlw	16
  2072     044A  00D6               	movwf	secuencia6@var4	;volatile
  2073     044B  3000               	movlw	0
  2074     044C  00D7               	movwf	secuencia6@var4+1	;volatile
  2075     044D                     l1737:
  2076     044D  01D2               	clrf	secuencia6@var34	;volatile
  2077     044E  01D3               	clrf	secuencia6@var34+1	;volatile
  2078     044F                     l1739:
  2079                           
  2080                           ;main.c: 212:     var34 = var4 | var3;
  2081     044F  0854               	movf	secuencia6@var3,w	;volatile
  2082     0450  0456               	iorwf	secuencia6@var4,w	;volatile
  2083     0451  00D2               	movwf	secuencia6@var34	;volatile
  2084     0452  0855               	movf	secuencia6@var3+1,w	;volatile
  2085     0453  0457               	iorwf	secuencia6@var4+1,w	;volatile
  2086     0454  00D3               	movwf	secuencia6@var34+1	;volatile
  2087     0455                     l1741:
  2088                           
  2089                           ;main.c: 213:     PORTD = (unsigned char)(var34);
  2090     0455  0852               	movf	secuencia6@var34,w	;volatile
  2091     0456  0088               	movwf	8	;volatile
  2092     0457                     l1743:
  2093                           
  2094                           ;main.c: 214:      _delay((unsigned long)((500)*(8000000/4000.0)));
  2095     0457  3006               	movlw	6
  2096     0458  00F2               	movwf	??_secuencia6+2
  2097     0459  3013               	movlw	19
  2098     045A  00F1               	movwf	??_secuencia6+1
  2099     045B  30AD               	movlw	173
  2100     045C  00F0               	movwf	??_secuencia6
  2101     045D                     u1267:
  2102     045D  0BF0               	decfsz	??_secuencia6,f
  2103     045E  2C5D               	goto	u1267
  2104     045F  0BF1               	decfsz	??_secuencia6+1,f
  2105     0460  2C5D               	goto	u1267
  2106     0461  0BF2               	decfsz	??_secuencia6+2,f
  2107     0462  2C5D               	goto	u1267
  2108     0463  2C64               	nop2
  2109                           
  2110                           ;main.c: 215:     for (int i = 0; i < 3; i++){
  2111     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2112     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2113     0466  01CA               	clrf	secuencia6@i_247
  2114     0467  01CB               	clrf	secuencia6@i_247+1
  2115     0468                     l1749:
  2116                           
  2117                           ;main.c: 216:         var3= var3 + 2;
  2118     0468  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0469  1303               	bcf	3,6	;RP1=0, select bank0
  2120     046A  0854               	movf	secuencia6@var3,w	;volatile
  2121     046B  3E02               	addlw	2
  2122     046C  00D4               	movwf	secuencia6@var3	;volatile
  2123     046D  0855               	movf	secuencia6@var3+1,w	;volatile
  2124     046E  1803               	skipnc
  2125     046F  3E01               	addlw	1
  2126     0470  3E00               	addlw	0
  2127     0471  00D5               	movwf	secuencia6@var3+1	;volatile
  2128     0472                     l1751:
  2129                           
  2130                           ;main.c: 217:         var4= var4 << 1;
  2131     0472  1003               	clrc
  2132     0473  0D56               	rlf	secuencia6@var4,w	;volatile
  2133     0474  00D6               	movwf	secuencia6@var4	;volatile
  2134     0475  0D57               	rlf	secuencia6@var4+1,w	;volatile
  2135     0476  00D7               	movwf	secuencia6@var4+1	;volatile
  2136     0477                     l1753:
  2137                           
  2138                           ;main.c: 218:         var34 = var4 | var3;
  2139     0477  0854               	movf	secuencia6@var3,w	;volatile
  2140     0478  0456               	iorwf	secuencia6@var4,w	;volatile
  2141     0479  00D2               	movwf	secuencia6@var34	;volatile
  2142     047A  0855               	movf	secuencia6@var3+1,w	;volatile
  2143     047B  0457               	iorwf	secuencia6@var4+1,w	;volatile
  2144     047C  00D3               	movwf	secuencia6@var34+1	;volatile
  2145     047D                     l1755:
  2146                           
  2147                           ;main.c: 219:         PORTD = (unsigned char)(var34);
  2148     047D  0852               	movf	secuencia6@var34,w	;volatile
  2149     047E  0088               	movwf	8	;volatile
  2150     047F                     l1757:
  2151                           
  2152                           ;main.c: 220:          _delay((unsigned long)((500)*(8000000/4000.0)));
  2153     047F  3006               	movlw	6
  2154     0480  00F2               	movwf	??_secuencia6+2
  2155     0481  3013               	movlw	19
  2156     0482  00F1               	movwf	??_secuencia6+1
  2157     0483  30AD               	movlw	173
  2158     0484  00F0               	movwf	??_secuencia6
  2159     0485                     u1277:
  2160     0485  0BF0               	decfsz	??_secuencia6,f
  2161     0486  2C85               	goto	u1277
  2162     0487  0BF1               	decfsz	??_secuencia6+1,f
  2163     0488  2C85               	goto	u1277
  2164     0489  0BF2               	decfsz	??_secuencia6+2,f
  2165     048A  2C85               	goto	u1277
  2166     048B  2C8C               	nop2
  2167     048C                     l1759:
  2168                           
  2169                           ;main.c: 221:     }
  2170     048C  3001               	movlw	1
  2171     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2172     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2173     048F  07CA               	addwf	secuencia6@i_247,f
  2174     0490  1803               	skipnc
  2175     0491  0ACB               	incf	secuencia6@i_247+1,f
  2176     0492  3000               	movlw	0
  2177     0493  07CB               	addwf	secuencia6@i_247+1,f
  2178     0494                     l1761:
  2179     0494  084B               	movf	secuencia6@i_247+1,w
  2180     0495  3A80               	xorlw	128
  2181     0496  00FF               	movwf	btemp+1
  2182     0497  3080               	movlw	128
  2183     0498  027F               	subwf	btemp+1,w
  2184     0499  1D03               	skipz
  2185     049A  2C9D               	goto	u1075
  2186     049B  3003               	movlw	3
  2187     049C  024A               	subwf	secuencia6@i_247,w
  2188     049D                     u1075:
  2189     049D  1C03               	skipc
  2190     049E  2CA0               	goto	u1071
  2191     049F  2CA1               	goto	u1070
  2192     04A0                     u1071:
  2193     04A0  2C68               	goto	l1749
  2194     04A1                     u1070:
  2195     04A1                     l112:
  2196     04A1  0008               	return
  2197     04A2                     __end_of_secuencia6:
  2198                           
  2199                           	psect	text4
  2200     0583                     __ptext4:	
  2201 ;; *************** function _secuencia5 *****************
  2202 ;; Defined at:
  2203 ;;		line 167 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  i               2    2[BANK0 ] int 
  2208 ;;  i               2    0[BANK0 ] int 
  2209 ;;  var3            2   14[BANK0 ] volatile unsigned int 
  2210 ;;  var2            2   12[BANK0 ] volatile unsigned int 
  2211 ;;  var1            2   10[BANK0 ] volatile unsigned int 
  2212 ;;  var4            2    8[BANK0 ] volatile unsigned int 
  2213 ;;  var34           2    6[BANK0 ] volatile unsigned int 
  2214 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, btemp+1
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0      16       0       0       0
  2226 ;;      Temps:          3       0       0       0       0
  2227 ;;      Totals:         3      16       0       0       0
  2228 ;;Total ram usage:       19 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237     0583                     _secuencia5:	
  2238                           ;psect for function _secuencia5
  2239                           
  2240     0583                     l1657:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _secuencia5: [wreg+status,2+status,0+btemp+1]
  2243                           
  2244                           
  2245                           ;main.c: 168: volatile unsigned int var1=0xA0,var2=0x01,var12 = 0;
  2246     0583  30A0               	movlw	160
  2247     0584  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0585  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0586  00D2               	movwf	secuencia5@var1	;volatile
  2250     0587  3000               	movlw	0
  2251     0588  00D3               	movwf	secuencia5@var1+1	;volatile
  2252     0589  3001               	movlw	1
  2253     058A  00D4               	movwf	secuencia5@var2	;volatile
  2254     058B  3000               	movlw	0
  2255     058C  00D5               	movwf	secuencia5@var2+1	;volatile
  2256     058D                     l1659:
  2257     058D  01CC               	clrf	secuencia5@var12	;volatile
  2258     058E  01CD               	clrf	secuencia5@var12+1	;volatile
  2259     058F                     l1661:
  2260                           
  2261                           ;main.c: 169:     for (int i = 0; i < 2; i++) {
  2262     058F  01C8               	clrf	secuencia5@i
  2263     0590  01C9               	clrf	secuencia5@i+1
  2264     0591                     l1667:
  2265                           
  2266                           ;main.c: 170:         var12 = var1 | var2;
  2267     0591  1283               	bcf	3,5	;RP0=0, select bank0
  2268     0592  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0593  0854               	movf	secuencia5@var2,w	;volatile
  2270     0594  0452               	iorwf	secuencia5@var1,w	;volatile
  2271     0595  00CC               	movwf	secuencia5@var12	;volatile
  2272     0596  0855               	movf	secuencia5@var2+1,w	;volatile
  2273     0597  0453               	iorwf	secuencia5@var1+1,w	;volatile
  2274     0598  00CD               	movwf	secuencia5@var12+1	;volatile
  2275                           
  2276                           ;main.c: 171:         PORTD = (unsigned char)(var12);
  2277     0599  084C               	movf	secuencia5@var12,w	;volatile
  2278     059A  0088               	movwf	8	;volatile
  2279                           
  2280                           ;main.c: 172:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2281     059B  3006               	movlw	6
  2282     059C  00F2               	movwf	??_secuencia5+2
  2283     059D  3013               	movlw	19
  2284     059E  00F1               	movwf	??_secuencia5+1
  2285     059F  30AD               	movlw	173
  2286     05A0  00F0               	movwf	??_secuencia5
  2287     05A1                     u1287:
  2288     05A1  0BF0               	decfsz	??_secuencia5,f
  2289     05A2  2DA1               	goto	u1287
  2290     05A3  0BF1               	decfsz	??_secuencia5+1,f
  2291     05A4  2DA1               	goto	u1287
  2292     05A5  0BF2               	decfsz	??_secuencia5+2,f
  2293     05A6  2DA1               	goto	u1287
  2294     05A7  2DA8               	nop2
  2295     05A8                     l1669:
  2296                           
  2297                           ;main.c: 173:         var1 = var1 >> 1;
  2298     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2299     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2300     05AA  0853               	movf	secuencia5@var1+1,w	;volatile
  2301     05AB  00F1               	movwf	??_secuencia5+1
  2302     05AC  0852               	movf	secuencia5@var1,w	;volatile
  2303     05AD  00F0               	movwf	??_secuencia5
  2304     05AE  1003               	clrc
  2305     05AF  0CF1               	rrf	??_secuencia5+1,f
  2306     05B0  0CF0               	rrf	??_secuencia5,f
  2307     05B1  0870               	movf	??_secuencia5,w
  2308     05B2  00D2               	movwf	secuencia5@var1	;volatile
  2309     05B3  0871               	movf	??_secuencia5+1,w
  2310     05B4  00D3               	movwf	secuencia5@var1+1	;volatile
  2311     05B5                     l1671:
  2312                           
  2313                           ;main.c: 174:         var2 = var2 << 1;
  2314     05B5  1003               	clrc
  2315     05B6  0D54               	rlf	secuencia5@var2,w	;volatile
  2316     05B7  00D4               	movwf	secuencia5@var2	;volatile
  2317     05B8  0D55               	rlf	secuencia5@var2+1,w	;volatile
  2318     05B9  00D5               	movwf	secuencia5@var2+1	;volatile
  2319     05BA                     l1673:
  2320                           
  2321                           ;main.c: 175:         var12 = var1 | var2;
  2322     05BA  0854               	movf	secuencia5@var2,w	;volatile
  2323     05BB  0452               	iorwf	secuencia5@var1,w	;volatile
  2324     05BC  00CC               	movwf	secuencia5@var12	;volatile
  2325     05BD  0855               	movf	secuencia5@var2+1,w	;volatile
  2326     05BE  0453               	iorwf	secuencia5@var1+1,w	;volatile
  2327     05BF  00CD               	movwf	secuencia5@var12+1	;volatile
  2328     05C0                     l1675:
  2329                           
  2330                           ;main.c: 176:         PORTD = (unsigned char)(var12);
  2331     05C0  084C               	movf	secuencia5@var12,w	;volatile
  2332     05C1  0088               	movwf	8	;volatile
  2333     05C2                     l1677:
  2334                           
  2335                           ;main.c: 177:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2336     05C2  3006               	movlw	6
  2337     05C3  00F2               	movwf	??_secuencia5+2
  2338     05C4  3013               	movlw	19
  2339     05C5  00F1               	movwf	??_secuencia5+1
  2340     05C6  30AD               	movlw	173
  2341     05C7  00F0               	movwf	??_secuencia5
  2342     05C8                     u1297:
  2343     05C8  0BF0               	decfsz	??_secuencia5,f
  2344     05C9  2DC8               	goto	u1297
  2345     05CA  0BF1               	decfsz	??_secuencia5+1,f
  2346     05CB  2DC8               	goto	u1297
  2347     05CC  0BF2               	decfsz	??_secuencia5+2,f
  2348     05CD  2DC8               	goto	u1297
  2349     05CE  2DCF               	nop2
  2350     05CF                     l1679:
  2351                           
  2352                           ;main.c: 178:         var12 = var1 | var2;
  2353     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2354     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2355     05D1  0854               	movf	secuencia5@var2,w	;volatile
  2356     05D2  0452               	iorwf	secuencia5@var1,w	;volatile
  2357     05D3  00CC               	movwf	secuencia5@var12	;volatile
  2358     05D4  0855               	movf	secuencia5@var2+1,w	;volatile
  2359     05D5  0453               	iorwf	secuencia5@var1+1,w	;volatile
  2360     05D6  00CD               	movwf	secuencia5@var12+1	;volatile
  2361     05D7                     l1681:
  2362                           
  2363                           ;main.c: 179:         var1 = var1 << 1;
  2364     05D7  1003               	clrc
  2365     05D8  0D52               	rlf	secuencia5@var1,w	;volatile
  2366     05D9  00D2               	movwf	secuencia5@var1	;volatile
  2367     05DA  0D53               	rlf	secuencia5@var1+1,w	;volatile
  2368     05DB  00D3               	movwf	secuencia5@var1+1	;volatile
  2369     05DC                     l1683:
  2370                           
  2371                           ;main.c: 180:         var2 = var2 << 1;
  2372     05DC  1003               	clrc
  2373     05DD  0D54               	rlf	secuencia5@var2,w	;volatile
  2374     05DE  00D4               	movwf	secuencia5@var2	;volatile
  2375     05DF  0D55               	rlf	secuencia5@var2+1,w	;volatile
  2376     05E0  00D5               	movwf	secuencia5@var2+1	;volatile
  2377     05E1                     l1685:
  2378                           
  2379                           ;main.c: 182:     }
  2380     05E1  3001               	movlw	1
  2381     05E2  07C8               	addwf	secuencia5@i,f
  2382     05E3  1803               	skipnc
  2383     05E4  0AC9               	incf	secuencia5@i+1,f
  2384     05E5  3000               	movlw	0
  2385     05E6  07C9               	addwf	secuencia5@i+1,f
  2386     05E7                     l1687:
  2387     05E7  0849               	movf	secuencia5@i+1,w
  2388     05E8  3A80               	xorlw	128
  2389     05E9  00FF               	movwf	btemp+1
  2390     05EA  3080               	movlw	128
  2391     05EB  027F               	subwf	btemp+1,w
  2392     05EC  1D03               	skipz
  2393     05ED  2DF0               	goto	u1045
  2394     05EE  3002               	movlw	2
  2395     05EF  0248               	subwf	secuencia5@i,w
  2396     05F0                     u1045:
  2397     05F0  1C03               	skipc
  2398     05F1  2DF3               	goto	u1041
  2399     05F2  2DF4               	goto	u1040
  2400     05F3                     u1041:
  2401     05F3  2D91               	goto	l1667
  2402     05F4                     u1040:
  2403     05F4                     l1689:
  2404                           
  2405                           ;main.c: 184: volatile unsigned int var3=0xA0,var4=0x08,var34 = 0;
  2406     05F4  30A0               	movlw	160
  2407     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2408     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2409     05F7  00D6               	movwf	secuencia5@var3	;volatile
  2410     05F8  3000               	movlw	0
  2411     05F9  00D7               	movwf	secuencia5@var3+1	;volatile
  2412     05FA  3008               	movlw	8
  2413     05FB  00D0               	movwf	secuencia5@var4	;volatile
  2414     05FC  3000               	movlw	0
  2415     05FD  00D1               	movwf	secuencia5@var4+1	;volatile
  2416     05FE                     l1691:
  2417     05FE  01CE               	clrf	secuencia5@var34	;volatile
  2418     05FF  01CF               	clrf	secuencia5@var34+1	;volatile
  2419     0600                     l1693:
  2420                           
  2421                           ;main.c: 185:     for (int i = 0; i < 2; i++){
  2422     0600  01CA               	clrf	secuencia5@i_238
  2423     0601  01CB               	clrf	secuencia5@i_238+1
  2424     0602                     l1699:
  2425                           
  2426                           ;main.c: 186:         var34 = var3 | var4;
  2427     0602  1283               	bcf	3,5	;RP0=0, select bank0
  2428     0603  1303               	bcf	3,6	;RP1=0, select bank0
  2429     0604  0850               	movf	secuencia5@var4,w	;volatile
  2430     0605  0456               	iorwf	secuencia5@var3,w	;volatile
  2431     0606  00CE               	movwf	secuencia5@var34	;volatile
  2432     0607  0851               	movf	secuencia5@var4+1,w	;volatile
  2433     0608  0457               	iorwf	secuencia5@var3+1,w	;volatile
  2434     0609  00CF               	movwf	secuencia5@var34+1	;volatile
  2435                           
  2436                           ;main.c: 187:         PORTD = (unsigned char)(var34);
  2437     060A  084E               	movf	secuencia5@var34,w	;volatile
  2438     060B  0088               	movwf	8	;volatile
  2439                           
  2440                           ;main.c: 188:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2441     060C  3006               	movlw	6
  2442     060D  00F2               	movwf	??_secuencia5+2
  2443     060E  3013               	movlw	19
  2444     060F  00F1               	movwf	??_secuencia5+1
  2445     0610  30AD               	movlw	173
  2446     0611  00F0               	movwf	??_secuencia5
  2447     0612                     u1307:
  2448     0612  0BF0               	decfsz	??_secuencia5,f
  2449     0613  2E12               	goto	u1307
  2450     0614  0BF1               	decfsz	??_secuencia5+1,f
  2451     0615  2E12               	goto	u1307
  2452     0616  0BF2               	decfsz	??_secuencia5+2,f
  2453     0617  2E12               	goto	u1307
  2454     0618  2E19               	nop2
  2455     0619                     l1701:
  2456                           
  2457                           ;main.c: 189:         var3 = var3 >> 1;
  2458     0619  1283               	bcf	3,5	;RP0=0, select bank0
  2459     061A  1303               	bcf	3,6	;RP1=0, select bank0
  2460     061B  0857               	movf	secuencia5@var3+1,w	;volatile
  2461     061C  00F1               	movwf	??_secuencia5+1
  2462     061D  0856               	movf	secuencia5@var3,w	;volatile
  2463     061E  00F0               	movwf	??_secuencia5
  2464     061F  1003               	clrc
  2465     0620  0CF1               	rrf	??_secuencia5+1,f
  2466     0621  0CF0               	rrf	??_secuencia5,f
  2467     0622  0870               	movf	??_secuencia5,w
  2468     0623  00D6               	movwf	secuencia5@var3	;volatile
  2469     0624  0871               	movf	??_secuencia5+1,w
  2470     0625  00D7               	movwf	secuencia5@var3+1	;volatile
  2471     0626                     l1703:
  2472                           
  2473                           ;main.c: 190:         var4 = var4 >> 1;
  2474     0626  0851               	movf	secuencia5@var4+1,w	;volatile
  2475     0627  00F1               	movwf	??_secuencia5+1
  2476     0628  0850               	movf	secuencia5@var4,w	;volatile
  2477     0629  00F0               	movwf	??_secuencia5
  2478     062A  1003               	clrc
  2479     062B  0CF1               	rrf	??_secuencia5+1,f
  2480     062C  0CF0               	rrf	??_secuencia5,f
  2481     062D  0870               	movf	??_secuencia5,w
  2482     062E  00D0               	movwf	secuencia5@var4	;volatile
  2483     062F  0871               	movf	??_secuencia5+1,w
  2484     0630  00D1               	movwf	secuencia5@var4+1	;volatile
  2485                           
  2486                           ;main.c: 191:         var34 = var3 | var4;
  2487     0631  0850               	movf	secuencia5@var4,w	;volatile
  2488     0632  0456               	iorwf	secuencia5@var3,w	;volatile
  2489     0633  00CE               	movwf	secuencia5@var34	;volatile
  2490     0634  0851               	movf	secuencia5@var4+1,w	;volatile
  2491     0635  0457               	iorwf	secuencia5@var3+1,w	;volatile
  2492     0636  00CF               	movwf	secuencia5@var34+1	;volatile
  2493                           
  2494                           ;main.c: 192:         PORTD = (unsigned char)(var34);
  2495     0637  084E               	movf	secuencia5@var34,w	;volatile
  2496     0638  0088               	movwf	8	;volatile
  2497                           
  2498                           ;main.c: 193:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2499     0639  3006               	movlw	6
  2500     063A  00F2               	movwf	??_secuencia5+2
  2501     063B  3013               	movlw	19
  2502     063C  00F1               	movwf	??_secuencia5+1
  2503     063D  30AD               	movlw	173
  2504     063E  00F0               	movwf	??_secuencia5
  2505     063F                     u1317:
  2506     063F  0BF0               	decfsz	??_secuencia5,f
  2507     0640  2E3F               	goto	u1317
  2508     0641  0BF1               	decfsz	??_secuencia5+1,f
  2509     0642  2E3F               	goto	u1317
  2510     0643  0BF2               	decfsz	??_secuencia5+2,f
  2511     0644  2E3F               	goto	u1317
  2512     0645  2E46               	nop2
  2513                           
  2514                           ;main.c: 194:         var34 = var3 | var3;
  2515     0646  1283               	bcf	3,5	;RP0=0, select bank0
  2516     0647  1303               	bcf	3,6	;RP1=0, select bank0
  2517     0648  0856               	movf	secuencia5@var3,w	;volatile
  2518     0649  0456               	iorwf	secuencia5@var3,w	;volatile
  2519     064A  00CE               	movwf	secuencia5@var34	;volatile
  2520     064B  0857               	movf	secuencia5@var3+1,w	;volatile
  2521     064C  0457               	iorwf	secuencia5@var3+1,w	;volatile
  2522     064D  00CF               	movwf	secuencia5@var34+1	;volatile
  2523                           
  2524                           ;main.c: 195:         var3 = var3 << 1;
  2525     064E  1003               	clrc
  2526     064F  0D56               	rlf	secuencia5@var3,w	;volatile
  2527     0650  00D6               	movwf	secuencia5@var3	;volatile
  2528     0651  0D57               	rlf	secuencia5@var3+1,w	;volatile
  2529     0652  00D7               	movwf	secuencia5@var3+1	;volatile
  2530     0653                     l1705:
  2531                           
  2532                           ;main.c: 196:         var4 = var4 >> 1;
  2533     0653  0851               	movf	secuencia5@var4+1,w	;volatile
  2534     0654  00F1               	movwf	??_secuencia5+1
  2535     0655  0850               	movf	secuencia5@var4,w	;volatile
  2536     0656  00F0               	movwf	??_secuencia5
  2537     0657  1003               	clrc
  2538     0658  0CF1               	rrf	??_secuencia5+1,f
  2539     0659  0CF0               	rrf	??_secuencia5,f
  2540     065A  0870               	movf	??_secuencia5,w
  2541     065B  00D0               	movwf	secuencia5@var4	;volatile
  2542     065C  0871               	movf	??_secuencia5+1,w
  2543     065D  00D1               	movwf	secuencia5@var4+1	;volatile
  2544     065E                     l1707:
  2545                           
  2546                           ;main.c: 198:     }
  2547     065E  3001               	movlw	1
  2548     065F  07CA               	addwf	secuencia5@i_238,f
  2549     0660  1803               	skipnc
  2550     0661  0ACB               	incf	secuencia5@i_238+1,f
  2551     0662  3000               	movlw	0
  2552     0663  07CB               	addwf	secuencia5@i_238+1,f
  2553     0664                     l1709:
  2554     0664  084B               	movf	secuencia5@i_238+1,w
  2555     0665  3A80               	xorlw	128
  2556     0666  00FF               	movwf	btemp+1
  2557     0667  3080               	movlw	128
  2558     0668  027F               	subwf	btemp+1,w
  2559     0669  1D03               	skipz
  2560     066A  2E6D               	goto	u1055
  2561     066B  3002               	movlw	2
  2562     066C  024A               	subwf	secuencia5@i_238,w
  2563     066D                     u1055:
  2564     066D  1C03               	skipc
  2565     066E  2E70               	goto	u1051
  2566     066F  2E71               	goto	u1050
  2567     0670                     u1051:
  2568     0670  2E02               	goto	l1699
  2569     0671                     u1050:
  2570     0671                     l105:
  2571     0671  0008               	return
  2572     0672                     __end_of_secuencia5:
  2573                           
  2574                           	psect	text5
  2575     011E                     __ptext5:	
  2576 ;; *************** function _monitoreo *****************
  2577 ;; Defined at:
  2578 ;;		line 223 in file "main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          3       0       0       0       0
  2595 ;;      Totals:         3       0       0       0       0
  2596 ;;Total ram usage:        3 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 3
  2599 ;; This function calls:
  2600 ;;		_LCD_Clear
  2601 ;;		_LCD_String_xy
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607     011E                     _monitoreo:	
  2608                           ;psect for function _monitoreo
  2609                           
  2610     011E                     l1711:	
  2611                           ;incstack = 0
  2612                           ; Regs used in _monitoreo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2613                           
  2614                           
  2615                           ;main.c: 224: LCD_Clear();
  2616     011E  120A  118A  20A3  120A  118A  	fcall	_LCD_Clear
  2617     0123                     l1713:
  2618                           
  2619                           ;main.c: 225: LCD_String_xy(0,0,"Monitoreo");
  2620     0123  01F4               	clrf	LCD_String_xy@pos
  2621     0124  3054               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2622     0125  00F5               	movwf	LCD_String_xy@msg
  2623     0126  3000               	movlw	0
  2624     0127  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  2625     012C                     l1715:
  2626                           
  2627                           ;main.c: 226:  _delay((unsigned long)((1000)*(8000000/4000.0)));
  2628     012C  300B               	movlw	11
  2629     012D  00FA               	movwf	??_monitoreo+2
  2630     012E  3026               	movlw	38
  2631     012F  00F9               	movwf	??_monitoreo+1
  2632     0130  305D               	movlw	93
  2633     0131  00F8               	movwf	??_monitoreo
  2634     0132                     u1327:
  2635     0132  0BF8               	decfsz	??_monitoreo,f
  2636     0133  2932               	goto	u1327
  2637     0134  0BF9               	decfsz	??_monitoreo+1,f
  2638     0135  2932               	goto	u1327
  2639     0136  0BFA               	decfsz	??_monitoreo+2,f
  2640     0137  2932               	goto	u1327
  2641     0138  2939               	nop2
  2642     0139                     l115:
  2643     0139  0008               	return
  2644     013A                     __end_of_monitoreo:
  2645                           
  2646                           	psect	text6
  2647     00A3                     __ptext6:	
  2648 ;; *************** function _LCD_Clear *****************
  2649 ;; Defined at:
  2650 ;;		line 162 in file "LCD.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0
  2666 ;;      Temps:          2       0       0       0       0
  2667 ;;      Totals:         2       0       0       0       0
  2668 ;;Total ram usage:        2 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 1
  2671 ;; This function calls:
  2672 ;;		_LCD_Command
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;;		_monitoreo
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679     00A3                     _LCD_Clear:	
  2680                           ;psect for function _LCD_Clear
  2681                           
  2682     00A3                     l1427:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;LCD.c: 165:     LCD_Command(0x01);
  2688     00A3  3001               	movlw	1
  2689     00A4  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  2690     00A9                     l1429:
  2691                           
  2692                           ;LCD.c: 166:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2693     00A9  3008               	movlw	8
  2694     00AA  00F4               	movwf	??_LCD_Clear+1
  2695     00AB  30C9               	movlw	201
  2696     00AC  00F3               	movwf	??_LCD_Clear
  2697     00AD                     u1337:
  2698     00AD  0BF3               	decfsz	??_LCD_Clear,f
  2699     00AE  28AD               	goto	u1337
  2700     00AF  0BF4               	decfsz	??_LCD_Clear+1,f
  2701     00B0  28AD               	goto	u1337
  2702     00B1  28B2               	nop2
  2703     00B2                     l237:
  2704     00B2  0008               	return
  2705     00B3                     __end_of_LCD_Clear:
  2706                           
  2707                           	psect	text7
  2708     009B                     __ptext7:	
  2709 ;; *************** function _keypad_init *****************
  2710 ;; Defined at:
  2711 ;;		line 38 in file "KEYPAD.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2725 ;;      Params:         0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738     009B                     _keypad_init:	
  2739                           ;psect for function _keypad_init
  2740                           
  2741     009B                     l1509:	
  2742                           ;incstack = 0
  2743                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  2744                           
  2745                           
  2746                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  2747     009B  30F0               	movlw	240
  2748     009C  1683               	bsf	3,5	;RP0=1, select bank1
  2749     009D  1303               	bcf	3,6	;RP1=0, select bank1
  2750     009E  0586               	andwf	6,f	;volatile
  2751                           
  2752                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  2753     009F  30F0               	movlw	240
  2754     00A0  0486               	iorwf	6,f	;volatile
  2755     00A1                     l1511:
  2756                           
  2757                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  2758     00A1  1381               	bcf	1,7	;volatile
  2759     00A2                     l133:
  2760     00A2  0008               	return
  2761     00A3                     __end_of_keypad_init:
  2762                           
  2763                           	psect	text8
  2764     04A2                     __ptext8:	
  2765 ;; *************** function _keypad_getkey *****************
  2766 ;; Defined at:
  2767 ;;		line 57 in file "KEYPAD.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  2772 ;;  i               2   17[BANK0 ] int 
  2773 ;;  valor           1   16[BANK0 ] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0      19       0       0       0
  2785 ;;      Temps:          4       0       0       0       0
  2786 ;;      Totals:         4      19       0       0       0
  2787 ;;Total ram usage:       23 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796     04A2                     _keypad_getkey:	
  2797                           ;psect for function _keypad_getkey
  2798                           
  2799     04A2                     l1527:	
  2800                           ;incstack = 0
  2801                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  2802                           
  2803                           
  2804                           ;KEYPAD.c: 59: char letras[4][4]={ {'1','2','3','A'},
  2805     04A2  30A0               	movlw	keypad_getkey@F1424& (0+255)
  2806     04A3  0084               	movwf	4
  2807     04A4  3048               	movlw	low keypad_getkey@letras
  2808     04A5  00F0               	movwf	??_keypad_getkey
  2809     04A6  3010               	movlw	16
  2810     04A7  00F1               	movwf	??_keypad_getkey+1
  2811     04A8                     u770:
  2812     04A8  1383               	bcf	3,7	;select IRP bank1
  2813     04A9  0800               	movf	0,w
  2814     04AA  00F2               	movwf	??_keypad_getkey+2
  2815     04AB  0A04               	incf	4,w
  2816     04AC  00F3               	movwf	??_keypad_getkey+3
  2817     04AD  0870               	movf	??_keypad_getkey,w
  2818     04AE  0084               	movwf	4
  2819     04AF  0872               	movf	??_keypad_getkey+2,w
  2820     04B0  0080               	movwf	0
  2821     04B1  0A04               	incf	4,w
  2822     04B2  00F0               	movwf	??_keypad_getkey
  2823     04B3  0873               	movf	??_keypad_getkey+3,w
  2824     04B4  0084               	movwf	4
  2825     04B5  0BF1               	decfsz	??_keypad_getkey+1,f
  2826     04B6  2CA8               	goto	u770
  2827     04B7                     l1529:
  2828     04B7                     l1531:
  2829                           
  2830                           ;KEYPAD.c: 64: char valor=0;
  2831     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2832     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2833     04B9  01D8               	clrf	keypad_getkey@valor
  2834     04BA                     l1533:
  2835                           
  2836                           ;KEYPAD.c: 66: for(i=0;i<4;i++){
  2837     04BA  01D9               	clrf	keypad_getkey@i
  2838     04BB  01DA               	clrf	keypad_getkey@i+1
  2839     04BC                     l1539:
  2840                           
  2841                           ;KEYPAD.c: 68:    if(i==0){
  2842     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2843     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2844     04BE  0859               	movf	keypad_getkey@i,w
  2845     04BF  045A               	iorwf	keypad_getkey@i+1,w
  2846     04C0  1D03               	btfss	3,2
  2847     04C1  2CC3               	goto	u781
  2848     04C2  2CC4               	goto	u780
  2849     04C3                     u781:
  2850     04C3  2CE9               	goto	l1561
  2851     04C4                     u780:
  2852     04C4                     l1541:
  2853                           
  2854                           ;KEYPAD.c: 70:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  2855     04C4  30FE               	movlw	254
  2856     04C5  0086               	movwf	6	;volatile
  2857     04C6                     l1543:
  2858                           
  2859                           ;KEYPAD.c: 71:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2860     04C6  3042               	movlw	66
  2861     04C7  00F0               	movwf	??_keypad_getkey
  2862     04C8                     u1347:
  2863     04C8  0BF0               	decfsz	??_keypad_getkey,f
  2864     04C9  2CC8               	goto	u1347
  2865     04CA  0000               	nop
  2866                           
  2867                           ;KEYPAD.c: 72:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  2868     04CB  2CCE               	goto	l1547
  2869     04CC                     l1545:
  2870     04CC  0848               	movf	keypad_getkey@letras,w
  2871     04CD  00D8               	movwf	keypad_getkey@valor
  2872     04CE                     l1547:
  2873     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2874     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2875     04D0  1E06               	btfss	6,4	;volatile
  2876     04D1  2CD3               	goto	u791
  2877     04D2  2CD4               	goto	u790
  2878     04D3                     u791:
  2879     04D3  2CCC               	goto	l1545
  2880     04D4                     u790:
  2881     04D4  2CD7               	goto	l1551
  2882     04D5                     l1549:
  2883     04D5  0849               	movf	keypad_getkey@letras+1,w
  2884     04D6  00D8               	movwf	keypad_getkey@valor
  2885     04D7                     l1551:
  2886     04D7  1E86               	btfss	6,5	;volatile
  2887     04D8  2CDA               	goto	u801
  2888     04D9  2CDB               	goto	u800
  2889     04DA                     u801:
  2890     04DA  2CD5               	goto	l1549
  2891     04DB                     u800:
  2892     04DB  2CDE               	goto	l1555
  2893     04DC                     l1553:
  2894     04DC  084A               	movf	keypad_getkey@letras+2,w
  2895     04DD  00D8               	movwf	keypad_getkey@valor
  2896     04DE                     l1555:
  2897     04DE  1F06               	btfss	6,6	;volatile
  2898     04DF  2CE1               	goto	u811
  2899     04E0  2CE2               	goto	u810
  2900     04E1                     u811:
  2901     04E1  2CDC               	goto	l1553
  2902     04E2                     u810:
  2903     04E2  2CE5               	goto	l1559
  2904     04E3                     l1557:
  2905     04E3  084B               	movf	keypad_getkey@letras+3,w
  2906     04E4  00D8               	movwf	keypad_getkey@valor
  2907     04E5                     l1559:
  2908     04E5  1F86               	btfss	6,7	;volatile
  2909     04E6  2CE8               	goto	u821
  2910     04E7  2CE9               	goto	u820
  2911     04E8                     u821:
  2912     04E8  2CE3               	goto	l1557
  2913     04E9                     u820:
  2914     04E9                     l1561:
  2915                           
  2916                           ;KEYPAD.c: 78:    if(i==1){
  2917     04E9  0359               	decf	keypad_getkey@i,w
  2918     04EA  045A               	iorwf	keypad_getkey@i+1,w
  2919     04EB  1D03               	btfss	3,2
  2920     04EC  2CEE               	goto	u831
  2921     04ED  2CEF               	goto	u830
  2922     04EE                     u831:
  2923     04EE  2D14               	goto	l1583
  2924     04EF                     u830:
  2925     04EF                     l1563:
  2926                           
  2927                           ;KEYPAD.c: 79:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  2928     04EF  30FD               	movlw	253
  2929     04F0  0086               	movwf	6	;volatile
  2930     04F1                     l1565:
  2931                           
  2932                           ;KEYPAD.c: 80:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2933     04F1  3042               	movlw	66
  2934     04F2  00F0               	movwf	??_keypad_getkey
  2935     04F3                     u1357:
  2936     04F3  0BF0               	decfsz	??_keypad_getkey,f
  2937     04F4  2CF3               	goto	u1357
  2938     04F5  0000               	nop
  2939                           
  2940                           ;KEYPAD.c: 81:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  2941     04F6  2CF9               	goto	l1569
  2942     04F7                     l1567:
  2943     04F7  084C               	movf	keypad_getkey@letras+4,w
  2944     04F8  00D8               	movwf	keypad_getkey@valor
  2945     04F9                     l1569:
  2946     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2947     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2948     04FB  1E06               	btfss	6,4	;volatile
  2949     04FC  2CFE               	goto	u841
  2950     04FD  2CFF               	goto	u840
  2951     04FE                     u841:
  2952     04FE  2CF7               	goto	l1567
  2953     04FF                     u840:
  2954     04FF  2D02               	goto	l1573
  2955     0500                     l1571:
  2956     0500  084D               	movf	keypad_getkey@letras+5,w
  2957     0501  00D8               	movwf	keypad_getkey@valor
  2958     0502                     l1573:
  2959     0502  1E86               	btfss	6,5	;volatile
  2960     0503  2D05               	goto	u851
  2961     0504  2D06               	goto	u850
  2962     0505                     u851:
  2963     0505  2D00               	goto	l1571
  2964     0506                     u850:
  2965     0506  2D09               	goto	l1577
  2966     0507                     l1575:
  2967     0507  084E               	movf	keypad_getkey@letras+6,w
  2968     0508  00D8               	movwf	keypad_getkey@valor
  2969     0509                     l1577:
  2970     0509  1F06               	btfss	6,6	;volatile
  2971     050A  2D0C               	goto	u861
  2972     050B  2D0D               	goto	u860
  2973     050C                     u861:
  2974     050C  2D07               	goto	l1575
  2975     050D                     u860:
  2976     050D  2D10               	goto	l1581
  2977     050E                     l1579:
  2978     050E  084F               	movf	keypad_getkey@letras+7,w
  2979     050F  00D8               	movwf	keypad_getkey@valor
  2980     0510                     l1581:
  2981     0510  1F86               	btfss	6,7	;volatile
  2982     0511  2D13               	goto	u871
  2983     0512  2D14               	goto	u870
  2984     0513                     u871:
  2985     0513  2D0E               	goto	l1579
  2986     0514                     u870:
  2987     0514                     l1583:
  2988                           
  2989                           ;KEYPAD.c: 87:    if(i==2){
  2990     0514  3002               	movlw	2
  2991     0515  0659               	xorwf	keypad_getkey@i,w
  2992     0516  045A               	iorwf	keypad_getkey@i+1,w
  2993     0517  1D03               	btfss	3,2
  2994     0518  2D1A               	goto	u881
  2995     0519  2D1B               	goto	u880
  2996     051A                     u881:
  2997     051A  2D40               	goto	l1605
  2998     051B                     u880:
  2999     051B                     l1585:
  3000                           
  3001                           ;KEYPAD.c: 88:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  3002     051B  30FB               	movlw	251
  3003     051C  0086               	movwf	6	;volatile
  3004     051D                     l1587:
  3005                           
  3006                           ;KEYPAD.c: 89:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3007     051D  3042               	movlw	66
  3008     051E  00F0               	movwf	??_keypad_getkey
  3009     051F                     u1367:
  3010     051F  0BF0               	decfsz	??_keypad_getkey,f
  3011     0520  2D1F               	goto	u1367
  3012     0521  0000               	nop
  3013                           
  3014                           ;KEYPAD.c: 90:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  3015     0522  2D25               	goto	l1591
  3016     0523                     l1589:
  3017     0523  0850               	movf	keypad_getkey@letras+8,w
  3018     0524  00D8               	movwf	keypad_getkey@valor
  3019     0525                     l1591:
  3020     0525  1283               	bcf	3,5	;RP0=0, select bank0
  3021     0526  1303               	bcf	3,6	;RP1=0, select bank0
  3022     0527  1E06               	btfss	6,4	;volatile
  3023     0528  2D2A               	goto	u891
  3024     0529  2D2B               	goto	u890
  3025     052A                     u891:
  3026     052A  2D23               	goto	l1589
  3027     052B                     u890:
  3028     052B  2D2E               	goto	l1595
  3029     052C                     l1593:
  3030     052C  0851               	movf	keypad_getkey@letras+9,w
  3031     052D  00D8               	movwf	keypad_getkey@valor
  3032     052E                     l1595:
  3033     052E  1E86               	btfss	6,5	;volatile
  3034     052F  2D31               	goto	u901
  3035     0530  2D32               	goto	u900
  3036     0531                     u901:
  3037     0531  2D2C               	goto	l1593
  3038     0532                     u900:
  3039     0532  2D35               	goto	l1599
  3040     0533                     l1597:
  3041     0533  0852               	movf	keypad_getkey@letras+10,w
  3042     0534  00D8               	movwf	keypad_getkey@valor
  3043     0535                     l1599:
  3044     0535  1F06               	btfss	6,6	;volatile
  3045     0536  2D38               	goto	u911
  3046     0537  2D39               	goto	u910
  3047     0538                     u911:
  3048     0538  2D33               	goto	l1597
  3049     0539                     u910:
  3050     0539  2D3C               	goto	l1603
  3051     053A                     l1601:
  3052     053A  0853               	movf	keypad_getkey@letras+11,w
  3053     053B  00D8               	movwf	keypad_getkey@valor
  3054     053C                     l1603:
  3055     053C  1F86               	btfss	6,7	;volatile
  3056     053D  2D3F               	goto	u921
  3057     053E  2D40               	goto	u920
  3058     053F                     u921:
  3059     053F  2D3A               	goto	l1601
  3060     0540                     u920:
  3061     0540                     l1605:
  3062                           
  3063                           ;KEYPAD.c: 96:    if(i==3){
  3064     0540  3003               	movlw	3
  3065     0541  0659               	xorwf	keypad_getkey@i,w
  3066     0542  045A               	iorwf	keypad_getkey@i+1,w
  3067     0543  1D03               	btfss	3,2
  3068     0544  2D46               	goto	u931
  3069     0545  2D47               	goto	u930
  3070     0546                     u931:
  3071     0546  2D6C               	goto	l1627
  3072     0547                     u930:
  3073     0547                     l1607:
  3074                           
  3075                           ;KEYPAD.c: 97:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  3076     0547  30F7               	movlw	247
  3077     0548  0086               	movwf	6	;volatile
  3078     0549                     l1609:
  3079                           
  3080                           ;KEYPAD.c: 98:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3081     0549  3042               	movlw	66
  3082     054A  00F0               	movwf	??_keypad_getkey
  3083     054B                     u1377:
  3084     054B  0BF0               	decfsz	??_keypad_getkey,f
  3085     054C  2D4B               	goto	u1377
  3086     054D  0000               	nop
  3087                           
  3088                           ;KEYPAD.c: 99:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  3089     054E  2D51               	goto	l1613
  3090     054F                     l1611:
  3091     054F  0854               	movf	keypad_getkey@letras+12,w
  3092     0550  00D8               	movwf	keypad_getkey@valor
  3093     0551                     l1613:
  3094     0551  1283               	bcf	3,5	;RP0=0, select bank0
  3095     0552  1303               	bcf	3,6	;RP1=0, select bank0
  3096     0553  1E06               	btfss	6,4	;volatile
  3097     0554  2D56               	goto	u941
  3098     0555  2D57               	goto	u940
  3099     0556                     u941:
  3100     0556  2D4F               	goto	l1611
  3101     0557                     u940:
  3102     0557  2D5A               	goto	l1617
  3103     0558                     l1615:
  3104     0558  0855               	movf	keypad_getkey@letras+13,w
  3105     0559  00D8               	movwf	keypad_getkey@valor
  3106     055A                     l1617:
  3107     055A  1E86               	btfss	6,5	;volatile
  3108     055B  2D5D               	goto	u951
  3109     055C  2D5E               	goto	u950
  3110     055D                     u951:
  3111     055D  2D58               	goto	l1615
  3112     055E                     u950:
  3113     055E  2D61               	goto	l1621
  3114     055F                     l1619:
  3115     055F  0856               	movf	keypad_getkey@letras+14,w
  3116     0560  00D8               	movwf	keypad_getkey@valor
  3117     0561                     l1621:
  3118     0561  1F06               	btfss	6,6	;volatile
  3119     0562  2D64               	goto	u961
  3120     0563  2D65               	goto	u960
  3121     0564                     u961:
  3122     0564  2D5F               	goto	l1619
  3123     0565                     u960:
  3124     0565  2D68               	goto	l1625
  3125     0566                     l1623:
  3126     0566  0857               	movf	keypad_getkey@letras+15,w
  3127     0567  00D8               	movwf	keypad_getkey@valor
  3128     0568                     l1625:
  3129     0568  1F86               	btfss	6,7	;volatile
  3130     0569  2D6B               	goto	u971
  3131     056A  2D6C               	goto	u970
  3132     056B                     u971:
  3133     056B  2D66               	goto	l1623
  3134     056C                     u970:
  3135     056C                     l1627:
  3136                           
  3137                           ;KEYPAD.c: 104:    }
  3138     056C  3001               	movlw	1
  3139     056D  07D9               	addwf	keypad_getkey@i,f
  3140     056E  1803               	skipnc
  3141     056F  0ADA               	incf	keypad_getkey@i+1,f
  3142     0570  3000               	movlw	0
  3143     0571  07DA               	addwf	keypad_getkey@i+1,f
  3144     0572                     l1629:
  3145     0572  085A               	movf	keypad_getkey@i+1,w
  3146     0573  3A80               	xorlw	128
  3147     0574  00FF               	movwf	btemp+1
  3148     0575  3080               	movlw	128
  3149     0576  027F               	subwf	btemp+1,w
  3150     0577  1D03               	skipz
  3151     0578  2D7B               	goto	u985
  3152     0579  3004               	movlw	4
  3153     057A  0259               	subwf	keypad_getkey@i,w
  3154     057B                     u985:
  3155     057B  1C03               	skipc
  3156     057C  2D7E               	goto	u981
  3157     057D  2D7F               	goto	u980
  3158     057E                     u981:
  3159     057E  2CBC               	goto	l1539
  3160     057F                     u980:
  3161     057F                     l1631:
  3162                           
  3163                           ;KEYPAD.c: 106:    return valor;
  3164     057F  1283               	bcf	3,5	;RP0=0, select bank0
  3165     0580  1303               	bcf	3,6	;RP1=0, select bank0
  3166     0581  0858               	movf	keypad_getkey@valor,w
  3167     0582                     l192:
  3168     0582  0008               	return
  3169     0583                     __end_of_keypad_getkey:
  3170                           
  3171                           	psect	text9
  3172     02F2                     __ptext9:	
  3173 ;; *************** function _blink_led *****************
  3174 ;; Defined at:
  3175 ;;		line 48 in file "main.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  led             1    wreg     unsigned char 
  3178 ;;  on_time         2    4[COMMON] unsigned int 
  3179 ;;  off_time        2    6[COMMON] unsigned int 
  3180 ;;  duration        2    8[COMMON] unsigned int 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  led             1    2[BANK0 ] unsigned char 
  3183 ;;  elapsed_time    2    0[BANK0 ] unsigned int 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         6       0       0       0       0
  3194 ;;      Locals:         0       3       0       0       0
  3195 ;;      Temps:          2       0       0       0       0
  3196 ;;      Totals:         8       3       0       0       0
  3197 ;;Total ram usage:       11 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		_delay_ms_variable
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     02F2                     _blink_led:	
  3208                           ;psect for function _blink_led
  3209                           
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  3213                           ;blink_led@led stored from wreg
  3214     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3215     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3216     02F4  00CA               	movwf	blink_led@led
  3217     02F5                     l1461:
  3218                           
  3219                           ;main.c: 49:     unsigned int elapsed_time = 0;
  3220     02F5  01C8               	clrf	blink_led@elapsed_time
  3221     02F6  01C9               	clrf	blink_led@elapsed_time+1
  3222                           
  3223                           ;main.c: 51:     while (elapsed_time < duration) {
  3224     02F7  2B4A               	goto	l1493
  3225     02F8                     l1463:
  3226                           
  3227                           ;main.c: 52:         if (led == 'V') {
  3228     02F8  3056               	movlw	86
  3229     02F9  064A               	xorwf	blink_led@led,w
  3230     02FA  1D03               	btfss	3,2
  3231     02FB  2AFD               	goto	u691
  3232     02FC  2AFE               	goto	u690
  3233     02FD                     u691:
  3234     02FD  2B00               	goto	l1467
  3235     02FE                     u690:
  3236     02FE                     l1465:
  3237                           
  3238                           ;main.c: 53:             PORTEbits.RE0 = 1;
  3239     02FE  1409               	bsf	9,0	;volatile
  3240                           
  3241                           ;main.c: 54:         } else if (led == 'A') {
  3242     02FF  2B0F               	goto	l1475
  3243     0300                     l1467:
  3244     0300  3041               	movlw	65
  3245     0301  064A               	xorwf	blink_led@led,w
  3246     0302  1D03               	btfss	3,2
  3247     0303  2B05               	goto	u701
  3248     0304  2B06               	goto	u700
  3249     0305                     u701:
  3250     0305  2B08               	goto	l1471
  3251     0306                     u700:
  3252     0306                     l1469:
  3253                           
  3254                           ;main.c: 55:             PORTEbits.RE1 = 1;
  3255     0306  1489               	bsf	9,1	;volatile
  3256                           
  3257                           ;main.c: 56:         } else if (led == 'R') {
  3258     0307  2B0F               	goto	l1475
  3259     0308                     l1471:
  3260     0308  3052               	movlw	82
  3261     0309  064A               	xorwf	blink_led@led,w
  3262     030A  1D03               	btfss	3,2
  3263     030B  2B0D               	goto	u711
  3264     030C  2B0E               	goto	u710
  3265     030D                     u711:
  3266     030D  2B0F               	goto	l1475
  3267     030E                     u710:
  3268     030E                     l1473:
  3269                           
  3270                           ;main.c: 57:             PORTEbits.RE2 = 1;
  3271     030E  1509               	bsf	9,2	;volatile
  3272     030F                     l1475:
  3273                           
  3274                           ;main.c: 59:         delay_ms_variable(on_time);
  3275     030F  0875               	movf	blink_led@on_time+1,w
  3276     0310  00F1               	movwf	delay_ms_variable@ms+1
  3277     0311  0874               	movf	blink_led@on_time,w
  3278     0312  00F0               	movwf	delay_ms_variable@ms
  3279     0313  120A  118A  20E9  120A  118A  	fcall	_delay_ms_variable
  3280     0318                     l1477:
  3281                           
  3282                           ;main.c: 62:         if (led == 'V') {
  3283     0318  3056               	movlw	86
  3284     0319  1283               	bcf	3,5	;RP0=0, select bank0
  3285     031A  1303               	bcf	3,6	;RP1=0, select bank0
  3286     031B  064A               	xorwf	blink_led@led,w
  3287     031C  1D03               	btfss	3,2
  3288     031D  2B1F               	goto	u721
  3289     031E  2B20               	goto	u720
  3290     031F                     u721:
  3291     031F  2B22               	goto	l1481
  3292     0320                     u720:
  3293     0320                     l1479:
  3294                           
  3295                           ;main.c: 63:             PORTEbits.RE0 = 0;
  3296     0320  1009               	bcf	9,0	;volatile
  3297                           
  3298                           ;main.c: 64:         } else if (led == 'A') {
  3299     0321  2B31               	goto	l1489
  3300     0322                     l1481:
  3301     0322  3041               	movlw	65
  3302     0323  064A               	xorwf	blink_led@led,w
  3303     0324  1D03               	btfss	3,2
  3304     0325  2B27               	goto	u731
  3305     0326  2B28               	goto	u730
  3306     0327                     u731:
  3307     0327  2B2A               	goto	l1485
  3308     0328                     u730:
  3309     0328                     l1483:
  3310                           
  3311                           ;main.c: 65:             PORTEbits.RE1 = 0;
  3312     0328  1089               	bcf	9,1	;volatile
  3313                           
  3314                           ;main.c: 66:         } else if (led == 'R') {
  3315     0329  2B31               	goto	l1489
  3316     032A                     l1485:
  3317     032A  3052               	movlw	82
  3318     032B  064A               	xorwf	blink_led@led,w
  3319     032C  1D03               	btfss	3,2
  3320     032D  2B2F               	goto	u741
  3321     032E  2B30               	goto	u740
  3322     032F                     u741:
  3323     032F  2B31               	goto	l1489
  3324     0330                     u740:
  3325     0330                     l1487:
  3326                           
  3327                           ;main.c: 67:             PORTEbits.RE2 = 0;
  3328     0330  1109               	bcf	9,2	;volatile
  3329     0331                     l1489:
  3330                           
  3331                           ;main.c: 69:         delay_ms_variable(off_time);
  3332     0331  0877               	movf	blink_led@off_time+1,w
  3333     0332  00F1               	movwf	delay_ms_variable@ms+1
  3334     0333  0876               	movf	blink_led@off_time,w
  3335     0334  00F0               	movwf	delay_ms_variable@ms
  3336     0335  120A  118A  20E9  120A  118A  	fcall	_delay_ms_variable
  3337     033A                     l1491:
  3338                           
  3339                           ;main.c: 71:         elapsed_time += on_time + off_time;
  3340     033A  0876               	movf	blink_led@off_time,w
  3341     033B  0774               	addwf	blink_led@on_time,w
  3342     033C  00FA               	movwf	??_blink_led
  3343     033D  0877               	movf	blink_led@off_time+1,w
  3344     033E  1803               	skipnc
  3345     033F  0A77               	incf	blink_led@off_time+1,w
  3346     0340  0775               	addwf	blink_led@on_time+1,w
  3347     0341  00FB               	movwf	??_blink_led+1
  3348     0342  087A               	movf	??_blink_led,w
  3349     0343  1283               	bcf	3,5	;RP0=0, select bank0
  3350     0344  1303               	bcf	3,6	;RP1=0, select bank0
  3351     0345  07C8               	addwf	blink_led@elapsed_time,f
  3352     0346  1803               	skipnc
  3353     0347  0AC9               	incf	blink_led@elapsed_time+1,f
  3354     0348  087B               	movf	??_blink_led+1,w
  3355     0349  07C9               	addwf	blink_led@elapsed_time+1,f
  3356     034A                     l1493:
  3357                           
  3358                           ;main.c: 51:     while (elapsed_time < duration) {
  3359     034A  0879               	movf	blink_led@duration+1,w
  3360     034B  0249               	subwf	blink_led@elapsed_time+1,w
  3361     034C  1D03               	skipz
  3362     034D  2B50               	goto	u755
  3363     034E  0878               	movf	blink_led@duration,w
  3364     034F  0248               	subwf	blink_led@elapsed_time,w
  3365     0350                     u755:
  3366     0350  1C03               	skipc
  3367     0351  2B53               	goto	u751
  3368     0352  2B54               	goto	u750
  3369     0353                     u751:
  3370     0353  2AF8               	goto	l1463
  3371     0354                     u750:
  3372     0354                     l78:
  3373     0354  0008               	return
  3374     0355                     __end_of_blink_led:
  3375                           
  3376                           	psect	text10
  3377     00E9                     __ptext10:	
  3378 ;; *************** function _delay_ms_variable *****************
  3379 ;; Defined at:
  3380 ;;		line 41 in file "main.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  ms              2    0[COMMON] unsigned int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         2       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          2       0       0       0       0
  3397 ;;      Totals:         4       0       0       0       0
  3398 ;;Total ram usage:        4 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_blink_led
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407     00E9                     _delay_ms_variable:	
  3408                           ;psect for function _delay_ms_variable
  3409                           
  3410     00E9                     l1407:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  3413                           
  3414                           
  3415                           ;main.c: 42:     while (ms--) {
  3416     00E9  28F3               	goto	l1411
  3417     00EA                     l1409:
  3418                           
  3419                           ;main.c: 43:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3420     00EA  3003               	movlw	3
  3421     00EB  00F3               	movwf	??_delay_ms_variable+1
  3422     00EC  3097               	movlw	151
  3423     00ED  00F2               	movwf	??_delay_ms_variable
  3424     00EE                     u1387:
  3425     00EE  0BF2               	decfsz	??_delay_ms_variable,f
  3426     00EF  28EE               	goto	u1387
  3427     00F0  0BF3               	decfsz	??_delay_ms_variable+1,f
  3428     00F1  28EE               	goto	u1387
  3429     00F2  28F3               	nop2
  3430     00F3                     l1411:
  3431                           
  3432                           ;main.c: 42:     while (ms--) {
  3433     00F3  3001               	movlw	1
  3434     00F4  02F0               	subwf	delay_ms_variable@ms,f
  3435     00F5  3000               	movlw	0
  3436     00F6  1C03               	skipc
  3437     00F7  03F1               	decf	delay_ms_variable@ms+1,f
  3438     00F8  02F1               	subwf	delay_ms_variable@ms+1,f
  3439     00F9  0A70               	incf	delay_ms_variable@ms,w
  3440     00FA  1D03               	skipz
  3441     00FB  2900               	goto	u621
  3442     00FC  0A71               	incf	delay_ms_variable@ms+1,w
  3443     00FD  1D03               	btfss	3,2
  3444     00FE  2900               	goto	u621
  3445     00FF  2901               	goto	u620
  3446     0100                     u621:
  3447     0100  28EA               	goto	l1409
  3448     0101                     u620:
  3449     0101                     l62:
  3450     0101  0008               	return
  3451     0102                     __end_of_delay_ms_variable:
  3452                           
  3453                           	psect	text11
  3454     0249                     __ptext11:	
  3455 ;; *************** function _Lmain *****************
  3456 ;; Defined at:
  3457 ;;		line 188 in file "LCD.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  i               1    8[COMMON] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         1       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         1       0       0       0       0
  3475 ;;Total ram usage:        1 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 3
  3478 ;; This function calls:
  3479 ;;		_LCD_Char
  3480 ;;		_LCD_Command
  3481 ;;		_LCD_Custom_Char
  3482 ;;		_LCD_String_xy
  3483 ;;		___bmul
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489     0249                     _Lmain:	
  3490                           ;psect for function _Lmain
  3491                           
  3492     0249                     l1513:	
  3493                           ;incstack = 0
  3494                           ; Regs used in _Lmain: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3495                           
  3496                           
  3497                           ;LCD.c: 192:     char i;;LCD.c: 194:     LCD_String_xy(1,0,"Pi D  T  C  ohm");
  3498     0249  01F4               	clrf	LCD_String_xy@pos
  3499     024A  3029               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3500     024B  00F5               	movwf	LCD_String_xy@msg
  3501     024C  3001               	movlw	1
  3502     024D  120A  118A  213A  120A  118A  	fcall	_LCD_String_xy
  3503                           
  3504                           ;LCD.c: 195:     LCD_Custom_Char(0,character1);
  3505     0252  3040               	movlw	(low (_character1| 0))& (0+255)
  3506     0253  00F3               	movwf	LCD_Custom_Char@msg
  3507     0254  3000               	movlw	0
  3508     0255  120A  118A  21B0  120A  118A  	fcall	_LCD_Custom_Char
  3509                           
  3510                           ;LCD.c: 196:     LCD_Custom_Char(1,character2);
  3511     025A  3038               	movlw	(low (_character2| 0))& (0+255)
  3512     025B  00F3               	movwf	LCD_Custom_Char@msg
  3513     025C  3001               	movlw	1
  3514     025D  120A  118A  21B0  120A  118A  	fcall	_LCD_Custom_Char
  3515                           
  3516                           ;LCD.c: 197:     LCD_Custom_Char(2,character3);
  3517     0262  3030               	movlw	(low (_character3| 0))& (0+255)
  3518     0263  00F3               	movwf	LCD_Custom_Char@msg
  3519     0264  3002               	movlw	2
  3520     0265  120A  118A  21B0  120A  118A  	fcall	_LCD_Custom_Char
  3521                           
  3522                           ;LCD.c: 198:     LCD_Custom_Char(3,character4);
  3523     026A  3028               	movlw	(low (_character4| 0))& (0+255)
  3524     026B  00F3               	movwf	LCD_Custom_Char@msg
  3525     026C  3003               	movlw	3
  3526     026D  120A  118A  21B0  120A  118A  	fcall	_LCD_Custom_Char
  3527                           
  3528                           ;LCD.c: 199:     LCD_Custom_Char(4,character5);
  3529     0272  3020               	movlw	(low (_character5| 0))& (0+255)
  3530     0273  00F3               	movwf	LCD_Custom_Char@msg
  3531     0274  3004               	movlw	4
  3532     0275  120A  118A  21B0  120A  118A  	fcall	_LCD_Custom_Char
  3533     027A                     l1515:
  3534                           
  3535                           ;LCD.c: 201:     for(i=0;i<5;i++)
  3536     027A  01F8               	clrf	Lmain@i
  3537     027B                     l1517:
  3538     027B  3005               	movlw	5
  3539     027C  0278               	subwf	Lmain@i,w
  3540     027D  1C03               	skipc
  3541     027E  2A80               	goto	u761
  3542     027F  2A81               	goto	u760
  3543     0280                     u761:
  3544     0280  2A82               	goto	l1521
  3545     0281                     u760:
  3546     0281  2A99               	goto	l248
  3547     0282                     l1521:
  3548                           
  3549                           ;LCD.c: 202:     {;LCD.c: 203:         LCD_Command(0xc0|(i*3));
  3550     0282  3003               	movlw	3
  3551     0283  00F0               	movwf	___bmul@multiplicand
  3552     0284  0878               	movf	Lmain@i,w
  3553     0285  120A  118A  20C3  120A  118A  	fcall	___bmul
  3554     028A  38C0               	iorlw	192
  3555     028B  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  3556                           
  3557                           ;LCD.c: 204:         LCD_Char(i);
  3558     0290  0878               	movf	Lmain@i,w
  3559     0291  120A  118A  2213  120A  118A  	fcall	_LCD_Char
  3560     0296                     l1523:
  3561                           
  3562                           ;LCD.c: 206:     }
  3563     0296  3001               	movlw	1
  3564     0297  07F8               	addwf	Lmain@i,f
  3565     0298  2A7B               	goto	l1517
  3566     0299                     l248:
  3567     0299  0008               	return
  3568     029A                     __end_of_Lmain:
  3569                           
  3570                           	psect	text12
  3571     00C3                     __ptext12:	
  3572 ;; *************** function ___bmul *****************
  3573 ;; Defined at:
  3574 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  multiplier      1    wreg     unsigned char 
  3577 ;;  multiplicand    1    0[COMMON] unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  multiplier      1    2[COMMON] unsigned char 
  3580 ;;  product         1    1[COMMON] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      unsigned char 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         1       0       0       0       0
  3591 ;;      Locals:         2       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0
  3593 ;;      Totals:         3       0       0       0       0
  3594 ;;Total ram usage:        3 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_Lmain
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603     00C3                     ___bmul:	
  3604                           ;psect for function ___bmul
  3605                           
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3609                           ;___bmul@multiplier stored from wreg
  3610     00C3  00F2               	movwf	___bmul@multiplier
  3611     00C4                     l1447:
  3612     00C4  01F1               	clrf	___bmul@product
  3613     00C5                     l1449:
  3614     00C5  1C72               	btfss	___bmul@multiplier,0
  3615     00C6  28C8               	goto	u671
  3616     00C7  28C9               	goto	u670
  3617     00C8                     u671:
  3618     00C8  28CB               	goto	l1453
  3619     00C9                     u670:
  3620     00C9                     l1451:
  3621     00C9  0870               	movf	___bmul@multiplicand,w
  3622     00CA  07F1               	addwf	___bmul@product,f
  3623     00CB                     l1453:
  3624     00CB  1003               	clrc
  3625     00CC  0DF0               	rlf	___bmul@multiplicand,f
  3626     00CD                     l1455:
  3627     00CD  1003               	clrc
  3628     00CE  0CF2               	rrf	___bmul@multiplier,f
  3629     00CF  0872               	movf	___bmul@multiplier,w
  3630     00D0  1D03               	btfss	3,2
  3631     00D1  28D3               	goto	u681
  3632     00D2  28D4               	goto	u680
  3633     00D3                     u681:
  3634     00D3  28C5               	goto	l1449
  3635     00D4                     u680:
  3636     00D4                     l1457:
  3637     00D4  0871               	movf	___bmul@product,w
  3638     00D5                     l360:
  3639     00D5  0008               	return
  3640     00D6                     __end_of___bmul:
  3641                           
  3642                           	psect	text13
  3643     013A                     __ptext13:	
  3644 ;; *************** function _LCD_String_xy *****************
  3645 ;; Defined at:
  3646 ;;		line 131 in file "LCD.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  row             1    wreg     unsigned char 
  3649 ;;  pos             1    4[COMMON] unsigned char 
  3650 ;;  msg             1    5[COMMON] PTR const unsigned char 
  3651 ;;		 -> STR_6(16), STR_5(10), STR_4(18), STR_3(17), 
  3652 ;;		 -> STR_2(15), STR_1(12), 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  row             1    6[COMMON] unsigned char 
  3655 ;;  location        1    7[COMMON] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         2       0       0       0       0
  3666 ;;      Locals:         2       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0
  3668 ;;      Totals:         4       0       0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 2
  3672 ;; This function calls:
  3673 ;;		_LCD_Command
  3674 ;;		_LCD_String
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;;		_monitoreo
  3678 ;;		_Lmain
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682     013A                     _LCD_String_xy:	
  3683                           ;psect for function _LCD_String_xy
  3684                           
  3685                           
  3686                           ;incstack = 0
  3687                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3688                           ;LCD_String_xy@row stored from wreg
  3689     013A  00F6               	movwf	LCD_String_xy@row
  3690     013B                     l1413:
  3691     013B                     l1415:
  3692                           
  3693                           ;LCD.c: 134:     if(row<=1)
  3694     013B  3002               	movlw	2
  3695     013C  0276               	subwf	LCD_String_xy@row,w
  3696     013D  1803               	skipnc
  3697     013E  2940               	goto	u631
  3698     013F  2941               	goto	u630
  3699     0140                     u631:
  3700     0140  294C               	goto	l1421
  3701     0141                     u630:
  3702     0141                     l1417:
  3703                           
  3704                           ;LCD.c: 135:     {;LCD.c: 136:         location=(0x80) | ((pos) & 0x0f);
  3705     0141  0874               	movf	LCD_String_xy@pos,w
  3706     0142  390F               	andlw	15
  3707     0143  3880               	iorlw	128
  3708     0144  00F7               	movwf	LCD_String_xy@location
  3709     0145                     l1419:
  3710                           
  3711                           ;LCD.c: 137:         LCD_Command(location);
  3712     0145  0877               	movf	LCD_String_xy@location,w
  3713     0146  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  3714                           
  3715                           ;LCD.c: 138:     }
  3716     014B  2956               	goto	l1425
  3717     014C                     l1421:
  3718                           
  3719                           ;LCD.c: 140:     {;LCD.c: 141:         location=(0xC0) | ((pos) & 0x0f);
  3720     014C  0874               	movf	LCD_String_xy@pos,w
  3721     014D  390F               	andlw	15
  3722     014E  38C0               	iorlw	192
  3723     014F  00F7               	movwf	LCD_String_xy@location
  3724     0150                     l1423:
  3725                           
  3726                           ;LCD.c: 142:         LCD_Command(location);
  3727     0150  0877               	movf	LCD_String_xy@location,w
  3728     0151  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  3729     0156                     l1425:
  3730                           
  3731                           ;LCD.c: 146:     LCD_String(msg);
  3732     0156  0875               	movf	LCD_String_xy@msg,w
  3733     0157  00F3               	movwf	LCD_String@msg
  3734     0158  120A  118A  2102  120A  118A  	fcall	_LCD_String
  3735     015D                     l234:
  3736     015D  0008               	return
  3737     015E                     __end_of_LCD_String_xy:
  3738                           
  3739                           	psect	text14
  3740     0102                     __ptext14:	
  3741 ;; *************** function _LCD_String *****************
  3742 ;; Defined at:
  3743 ;;		line 121 in file "LCD.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  msg             1    3[COMMON] PTR const unsigned char 
  3746 ;;		 -> STR_6(16), STR_5(10), STR_4(18), STR_3(17), 
  3747 ;;		 -> STR_2(15), STR_1(12), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         1       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         1       0       0       0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 1
  3766 ;; This function calls:
  3767 ;;		_LCD_Char
  3768 ;; This function is called by:
  3769 ;;		_LCD_String_xy
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773     0102                     _LCD_String:	
  3774                           ;psect for function _LCD_String
  3775                           
  3776     0102                     l1399:	
  3777                           ;incstack = 0
  3778                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3779                           
  3780                           
  3781                           ;LCD.c: 121: void LCD_String(const char *msg);LCD.c: 122: {;LCD.c: 123:  while((*msg)!=0
      +                          )
  3782     0102  2911               	goto	l1405
  3783     0103                     l1401:
  3784                           
  3785                           ;LCD.c: 124:  {;LCD.c: 125:    LCD_Char(*msg);
  3786     0103  0873               	movf	LCD_String@msg,w
  3787     0104  0084               	movwf	4
  3788     0105  120A  118A  2003  120A  118A  	fcall	stringdir
  3789     010A  120A  118A  2213  120A  118A  	fcall	_LCD_Char
  3790     010F                     l1403:
  3791                           
  3792                           ;LCD.c: 126:    msg++;
  3793     010F  3001               	movlw	1
  3794     0110  07F3               	addwf	LCD_String@msg,f
  3795     0111                     l1405:
  3796                           
  3797                           ;LCD.c: 123:  while((*msg)!=0)
  3798     0111  0873               	movf	LCD_String@msg,w
  3799     0112  0084               	movwf	4
  3800     0113  120A  118A  2003  120A  118A  	fcall	stringdir
  3801     0118  3A00               	xorlw	0
  3802     0119  1D03               	skipz
  3803     011A  291C               	goto	u611
  3804     011B  291D               	goto	u610
  3805     011C                     u611:
  3806     011C  2903               	goto	l1401
  3807     011D                     u610:
  3808     011D                     l229:
  3809     011D  0008               	return
  3810     011E                     __end_of_LCD_String:
  3811                           
  3812                           	psect	text15
  3813     01B0                     __ptext15:	
  3814 ;; *************** function _LCD_Custom_Char *****************
  3815 ;; Defined at:
  3816 ;;		line 169 in file "LCD.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  loc             1    wreg     unsigned char 
  3819 ;;  msg             1    3[COMMON] PTR unsigned char 
  3820 ;;		 -> character5(8), character4(8), character3(8), character2(8), 
  3821 ;;		 -> character1(8), 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  loc             1    5[COMMON] unsigned char 
  3824 ;;  i               1    6[COMMON] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         1       0       0       0       0
  3835 ;;      Locals:         2       0       0       0       0
  3836 ;;      Temps:          1       0       0       0       0
  3837 ;;      Totals:         4       0       0       0       0
  3838 ;;Total ram usage:        4 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 1
  3841 ;; This function calls:
  3842 ;;		_LCD_Char
  3843 ;;		_LCD_Command
  3844 ;; This function is called by:
  3845 ;;		_Lmain
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849     01B0                     _LCD_Custom_Char:	
  3850                           ;psect for function _LCD_Custom_Char
  3851                           
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _LCD_Custom_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3855                           ;LCD_Custom_Char@loc stored from wreg
  3856     01B0  00F5               	movwf	LCD_Custom_Char@loc
  3857     01B1                     l1431:
  3858                           
  3859                           ;LCD.c: 169: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD.c: 170: {;LC
      +                          D.c: 174:     unsigned char i;;LCD.c: 175:     if(loc<8)
  3860     01B1  3008               	movlw	8
  3861     01B2  0275               	subwf	LCD_Custom_Char@loc,w
  3862     01B3  1803               	skipnc
  3863     01B4  29B6               	goto	u641
  3864     01B5  29B7               	goto	u640
  3865     01B6                     u641:
  3866     01B6  29DC               	goto	l243
  3867     01B7                     u640:
  3868     01B7                     l1433:
  3869                           
  3870                           ;LCD.c: 176:     {;LCD.c: 177:      LCD_Command(0x40+(loc*8));
  3871     01B7  0875               	movf	LCD_Custom_Char@loc,w
  3872     01B8  00F4               	movwf	??_LCD_Custom_Char
  3873     01B9  3002               	movlw	2
  3874     01BA                     u655:
  3875     01BA  1003               	clrc
  3876     01BB  0DF4               	rlf	??_LCD_Custom_Char,f
  3877     01BC  3EFF               	addlw	-1
  3878     01BD  1D03               	skipz
  3879     01BE  29BA               	goto	u655
  3880     01BF  1003               	clrc
  3881     01C0  0D74               	rlf	??_LCD_Custom_Char,w
  3882     01C1  3E40               	addlw	64
  3883     01C2  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  3884     01C7                     l1435:
  3885                           
  3886                           ;LCD.c: 178:       for(i=0;i<8;i++)
  3887     01C7  01F6               	clrf	LCD_Custom_Char@i
  3888     01C8                     l1441:
  3889                           
  3890                           ;LCD.c: 179:            LCD_Char(msg[i]);
  3891     01C8  0876               	movf	LCD_Custom_Char@i,w
  3892     01C9  0773               	addwf	LCD_Custom_Char@msg,w
  3893     01CA  00F4               	movwf	??_LCD_Custom_Char
  3894     01CB  0874               	movf	??_LCD_Custom_Char,w
  3895     01CC  0084               	movwf	4
  3896     01CD  1383               	bcf	3,7	;select IRP bank0
  3897     01CE  0800               	movf	0,w
  3898     01CF  120A  118A  2213  120A  118A  	fcall	_LCD_Char
  3899     01D4                     l1443:
  3900     01D4  3001               	movlw	1
  3901     01D5  07F6               	addwf	LCD_Custom_Char@i,f
  3902     01D6                     l1445:
  3903     01D6  3008               	movlw	8
  3904     01D7  0276               	subwf	LCD_Custom_Char@i,w
  3905     01D8  1C03               	skipc
  3906     01D9  29DB               	goto	u661
  3907     01DA  29DC               	goto	u660
  3908     01DB                     u661:
  3909     01DB  29C8               	goto	l1441
  3910     01DC                     u660:
  3911     01DC                     l243:
  3912     01DC  0008               	return
  3913     01DD                     __end_of_LCD_Custom_Char:
  3914                           
  3915                           	psect	text16
  3916     0213                     __ptext16:	
  3917 ;; *************** function _LCD_Char *****************
  3918 ;; Defined at:
  3919 ;;		line 106 in file "LCD.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  dat             1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  dat             1    2[COMMON] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         0       0       0       0       0
  3934 ;;      Locals:         1       0       0       0       0
  3935 ;;      Temps:          2       0       0       0       0
  3936 ;;      Totals:         3       0       0       0       0
  3937 ;;Total ram usage:        3 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;;		_LCD_String
  3944 ;;		_LCD_Custom_Char
  3945 ;;		_Lmain
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     0213                     _LCD_Char:	
  3950                           ;psect for function _LCD_Char
  3951                           
  3952                           
  3953                           ;incstack = 0
  3954                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3955                           ;LCD_Char@dat stored from wreg
  3956     0213  00F2               	movwf	LCD_Char@dat
  3957     0214                     l1359:
  3958                           
  3959                           ;LCD.c: 106: void LCD_Char(unsigned char dat);LCD.c: 107: {;LCD.c: 108:  PORTC = (PORTC 
      +                          & 0x0f) | (0xF0 & dat);
  3960     0214  30F0               	movlw	240
  3961     0215  0572               	andwf	LCD_Char@dat,w
  3962     0216  00F0               	movwf	??_LCD_Char
  3963     0217  1283               	bcf	3,5	;RP0=0, select bank0
  3964     0218  1303               	bcf	3,6	;RP1=0, select bank0
  3965     0219  0807               	movf	7,w	;volatile
  3966     021A  390F               	andlw	15
  3967     021B  0470               	iorwf	??_LCD_Char,w
  3968     021C  0087               	movwf	7	;volatile
  3969     021D                     l1361:
  3970                           
  3971                           ;LCD.c: 109:  PORTCbits.RC0 = 1;
  3972     021D  1407               	bsf	7,0	;volatile
  3973     021E                     l1363:
  3974                           
  3975                           ;LCD.c: 110:  PORTCbits.RC1 = 1;
  3976     021E  1487               	bsf	7,1	;volatile
  3977     021F                     l1365:
  3978                           
  3979                           ;LCD.c: 111:  __nop();
  3980     021F  0000               	nop
  3981     0220                     l1367:
  3982                           
  3983                           ;LCD.c: 112:  PORTCbits.RC1 = 0;
  3984     0220  1283               	bcf	3,5	;RP0=0, select bank0
  3985     0221  1303               	bcf	3,6	;RP1=0, select bank0
  3986     0222  1087               	bcf	7,1	;volatile
  3987     0223                     l1369:
  3988                           
  3989                           ;LCD.c: 113:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3990     0223  3003               	movlw	3
  3991     0224  00F1               	movwf	??_LCD_Char+1
  3992     0225  3097               	movlw	151
  3993     0226  00F0               	movwf	??_LCD_Char
  3994     0227                     u1397:
  3995     0227  0BF0               	decfsz	??_LCD_Char,f
  3996     0228  2A27               	goto	u1397
  3997     0229  0BF1               	decfsz	??_LCD_Char+1,f
  3998     022A  2A27               	goto	u1397
  3999     022B  2A2C               	nop2
  4000     022C                     l1371:
  4001                           
  4002                           ;LCD.c: 114:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  4003     022C  0872               	movf	LCD_Char@dat,w
  4004     022D  00F0               	movwf	??_LCD_Char
  4005     022E  3004               	movlw	4
  4006     022F                     u595:
  4007     022F  1003               	clrc
  4008     0230  0DF0               	rlf	??_LCD_Char,f
  4009     0231  3EFF               	addlw	-1
  4010     0232  1D03               	skipz
  4011     0233  2A2F               	goto	u595
  4012     0234  1283               	bcf	3,5	;RP0=0, select bank0
  4013     0235  1303               	bcf	3,6	;RP1=0, select bank0
  4014     0236  0807               	movf	7,w	;volatile
  4015     0237  390F               	andlw	15
  4016     0238  0470               	iorwf	??_LCD_Char,w
  4017     0239  0087               	movwf	7	;volatile
  4018     023A                     l1373:
  4019                           
  4020                           ;LCD.c: 115:  PORTCbits.RC1 = 1;
  4021     023A  1487               	bsf	7,1	;volatile
  4022     023B                     l1375:
  4023                           
  4024                           ;LCD.c: 116:  __nop();
  4025     023B  0000               	nop
  4026     023C                     l1377:
  4027                           
  4028                           ;LCD.c: 117:  PORTCbits.RC1 = 0;
  4029     023C  1283               	bcf	3,5	;RP0=0, select bank0
  4030     023D  1303               	bcf	3,6	;RP1=0, select bank0
  4031     023E  1087               	bcf	7,1	;volatile
  4032                           
  4033                           ;LCD.c: 118:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4034     023F  3008               	movlw	8
  4035     0240  00F1               	movwf	??_LCD_Char+1
  4036     0241  30C9               	movlw	201
  4037     0242  00F0               	movwf	??_LCD_Char
  4038     0243                     u1407:
  4039     0243  0BF0               	decfsz	??_LCD_Char,f
  4040     0244  2A43               	goto	u1407
  4041     0245  0BF1               	decfsz	??_LCD_Char+1,f
  4042     0246  2A43               	goto	u1407
  4043     0247  2A48               	nop2
  4044     0248                     l223:
  4045     0248  0008               	return
  4046     0249                     __end_of_LCD_Char:
  4047                           
  4048                           	psect	text17
  4049     0186                     __ptext17:	
  4050 ;; *************** function _LCD_Init *****************
  4051 ;; Defined at:
  4052 ;;		line 53 in file "LCD.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          2       0       0       0       0
  4069 ;;      Totals:         2       0       0       0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 1
  4073 ;; This function calls:
  4074 ;;		_LCD_Command
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080     0186                     _LCD_Init:	
  4081                           ;psect for function _LCD_Init
  4082                           
  4083     0186                     l1495:	
  4084                           ;incstack = 0
  4085                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4086                           
  4087                           
  4088                           ;LCD.c: 55:     TRISC = 0;
  4089     0186  1683               	bsf	3,5	;RP0=1, select bank1
  4090     0187  1303               	bcf	3,6	;RP1=0, select bank1
  4091     0188  0187               	clrf	7	;volatile
  4092     0189                     l1497:
  4093                           
  4094                           ;LCD.c: 56:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4095     0189  3027               	movlw	39
  4096     018A  00F4               	movwf	??_LCD_Init+1
  4097     018B  30F5               	movlw	245
  4098     018C  00F3               	movwf	??_LCD_Init
  4099     018D                     u1417:
  4100     018D  0BF3               	decfsz	??_LCD_Init,f
  4101     018E  298D               	goto	u1417
  4102     018F  0BF4               	decfsz	??_LCD_Init+1,f
  4103     0190  298D               	goto	u1417
  4104     0191                     l1499:
  4105                           
  4106                           ;LCD.c: 57:     LCD_Command(0x02);
  4107     0191  3002               	movlw	2
  4108     0192  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  4109     0197                     l1501:
  4110                           
  4111                           ;LCD.c: 58:     LCD_Command(0x28);
  4112     0197  3028               	movlw	40
  4113     0198  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  4114     019D                     l1503:
  4115                           
  4116                           ;LCD.c: 59:     LCD_Command(0x01);
  4117     019D  3001               	movlw	1
  4118     019E  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  4119     01A3                     l1505:
  4120                           
  4121                           ;LCD.c: 60:     LCD_Command(0x0c);
  4122     01A3  300C               	movlw	12
  4123     01A4  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  4124     01A9                     l1507:
  4125                           
  4126                           ;LCD.c: 61:     LCD_Command(0x06);
  4127     01A9  3006               	movlw	6
  4128     01AA  120A  118A  21DD  120A  118A  	fcall	_LCD_Command
  4129     01AF                     l217:
  4130     01AF  0008               	return
  4131     01B0                     __end_of_LCD_Init:
  4132                           
  4133                           	psect	text18
  4134     01DD                     __ptext18:	
  4135 ;; *************** function _LCD_Command *****************
  4136 ;; Defined at:
  4137 ;;		line 77 in file "LCD.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  cmd             1    wreg     unsigned char 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  cmd             1    2[COMMON] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4151 ;;      Params:         0       0       0       0       0
  4152 ;;      Locals:         1       0       0       0       0
  4153 ;;      Temps:          2       0       0       0       0
  4154 ;;      Totals:         3       0       0       0       0
  4155 ;;Total ram usage:        3 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;;		_LCD_Init
  4162 ;;		_LCD_String_xy
  4163 ;;		_LCD_Clear
  4164 ;;		_LCD_Custom_Char
  4165 ;;		_Lmain
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169     01DD                     _LCD_Command:	
  4170                           ;psect for function _LCD_Command
  4171                           
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  4175                           ;LCD_Command@cmd stored from wreg
  4176     01DD  00F2               	movwf	LCD_Command@cmd
  4177     01DE                     l1379:
  4178                           
  4179                           ;LCD.c: 77: void LCD_Command(unsigned char cmd );LCD.c: 78: {;LCD.c: 79:  PORTC = (PORTC
      +                           & 0x0f) |(0xF0 & cmd);
  4180     01DE  30F0               	movlw	240
  4181     01DF  0572               	andwf	LCD_Command@cmd,w
  4182     01E0  00F0               	movwf	??_LCD_Command
  4183     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4184     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4185     01E3  0807               	movf	7,w	;volatile
  4186     01E4  390F               	andlw	15
  4187     01E5  0470               	iorwf	??_LCD_Command,w
  4188     01E6  0087               	movwf	7	;volatile
  4189     01E7                     l1381:
  4190                           
  4191                           ;LCD.c: 80:  PORTCbits.RC0 = 0;
  4192     01E7  1007               	bcf	7,0	;volatile
  4193     01E8                     l1383:
  4194                           
  4195                           ;LCD.c: 81:  PORTCbits.RC1 = 1;
  4196     01E8  1487               	bsf	7,1	;volatile
  4197     01E9                     l1385:
  4198                           
  4199                           ;LCD.c: 82:  __nop();
  4200     01E9  0000               	nop
  4201     01EA                     l1387:
  4202                           
  4203                           ;LCD.c: 83:  PORTCbits.RC1 = 0;
  4204     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4205     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4206     01EC  1087               	bcf	7,1	;volatile
  4207     01ED                     l1389:
  4208                           
  4209                           ;LCD.c: 84:  _delay((unsigned long)((1)*(8000000/4000.0)));
  4210     01ED  3003               	movlw	3
  4211     01EE  00F1               	movwf	??_LCD_Command+1
  4212     01EF  3097               	movlw	151
  4213     01F0  00F0               	movwf	??_LCD_Command
  4214     01F1                     u1427:
  4215     01F1  0BF0               	decfsz	??_LCD_Command,f
  4216     01F2  29F1               	goto	u1427
  4217     01F3  0BF1               	decfsz	??_LCD_Command+1,f
  4218     01F4  29F1               	goto	u1427
  4219     01F5  29F6               	nop2
  4220     01F6                     l1391:
  4221                           
  4222                           ;LCD.c: 85:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  4223     01F6  0872               	movf	LCD_Command@cmd,w
  4224     01F7  00F0               	movwf	??_LCD_Command
  4225     01F8  3004               	movlw	4
  4226     01F9                     u605:
  4227     01F9  1003               	clrc
  4228     01FA  0DF0               	rlf	??_LCD_Command,f
  4229     01FB  3EFF               	addlw	-1
  4230     01FC  1D03               	skipz
  4231     01FD  29F9               	goto	u605
  4232     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4233     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4234     0200  0807               	movf	7,w	;volatile
  4235     0201  390F               	andlw	15
  4236     0202  0470               	iorwf	??_LCD_Command,w
  4237     0203  0087               	movwf	7	;volatile
  4238     0204                     l1393:
  4239                           
  4240                           ;LCD.c: 86:  PORTCbits.RC1 = 1;
  4241     0204  1487               	bsf	7,1	;volatile
  4242     0205                     l1395:
  4243                           
  4244                           ;LCD.c: 87:  __nop();
  4245     0205  0000               	nop
  4246     0206                     l1397:
  4247                           
  4248                           ;LCD.c: 88:  PORTCbits.RC1 = 0;
  4249     0206  1283               	bcf	3,5	;RP0=0, select bank0
  4250     0207  1303               	bcf	3,6	;RP1=0, select bank0
  4251     0208  1087               	bcf	7,1	;volatile
  4252                           
  4253                           ;LCD.c: 89:  _delay((unsigned long)((3)*(8000000/4000.0)));
  4254     0209  3008               	movlw	8
  4255     020A  00F1               	movwf	??_LCD_Command+1
  4256     020B  30C9               	movlw	201
  4257     020C  00F0               	movwf	??_LCD_Command
  4258     020D                     u1437:
  4259     020D  0BF0               	decfsz	??_LCD_Command,f
  4260     020E  2A0D               	goto	u1437
  4261     020F  0BF1               	decfsz	??_LCD_Command+1,f
  4262     0210  2A0D               	goto	u1437
  4263     0211  2A12               	nop2
  4264     0212                     l220:
  4265     0212  0008               	return
  4266     0213                     __end_of_LCD_Command:
  4267     0002                     ___latbits      equ	2
  4268     007E                     btemp           set	126	;btemp
  4269     007E                     wtemp0          set	126
  4270                           
  4271                           	psect	config
  4272                           
  4273                           ;Config register CONFIG1 @ 0x2007
  4274                           ;	Oscillator Selection bits
  4275                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4276                           ;	Watchdog Timer Enable bit
  4277                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4278                           ;	Power-up Timer Enable bit
  4279                           ;	PWRTE = OFF, PWRT disabled
  4280                           ;	RE3/MCLR pin function select bit
  4281                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4282                           ;	Code Protection bit
  4283                           ;	CP = OFF, Program memory code protection is disabled
  4284                           ;	Data Code Protection bit
  4285                           ;	CPD = OFF, Data memory code protection is disabled
  4286                           ;	Brown Out Reset Selection bits
  4287                           ;	BOREN = OFF, BOR disabled
  4288                           ;	Internal External Switchover bit
  4289                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4290                           ;	Fail-Safe Clock Monitor Enabled bit
  4291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4292                           ;	Low Voltage Programming Enable bit
  4293                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4294                           ;	In-Circuit Debugger Mode bit
  4295                           ;	DEBUG = 0x1, unprogrammed default
  4296     2007                     	org	8199
  4297     2007  20D5               	dw	8405
  4298                           
  4299                           ;Config register CONFIG2 @ 0x2008
  4300                           ;	Brown-out Reset Selection bit
  4301                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4302                           ;	Flash Program Memory Self Write Enable bits
  4303                           ;	WRT = OFF, Write protection off
  4304     2008                     	org	8200
  4305     2008  3FFF               	dw	16383

Data Sizes:
    Strings     88
    Constant    5
    Data        56
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     22      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Custom_Char@msg	PTR unsigned char  size(1) Largest target is 8
		 -> character1(BANK0[8]), character2(BANK0[8]), character3(BANK0[8]), character4(BANK0[8]), 
		 -> character5(BANK0[8]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[12]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 
		 -> STR_5(CODE[10]), STR_6(CODE[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[12]), STR_2(CODE[15]), STR_3(CODE[17]), STR_4(CODE[18]), 
		 -> STR_5(CODE[10]), STR_6(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_blink_led
    _monitoreo->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _blink_led->_delay_ms_variable
    _Lmain->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4289
                                             12 COMMON     1     1      0
                                             19 BANK0      3     3      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                              _Lmain
                          _blink_led
                      _keypad_getkey
                        _keypad_init
                          _monitoreo
                         _secuencia5
                         _secuencia6
                         _secuencia7
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     182
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _secuencia7                                          19    19      0     326
                                              0 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _secuencia6                                          19    19      0     391
                                              0 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _secuencia5                                          19    19      0     640
                                              0 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _monitoreo                                            3     3      0     374
                                              8 COMMON     3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _blink_led                                           11     5      6     341
                                              4 COMMON     8     2      6
                                              0 BANK0      3     3      0
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (2) _delay_ms_variable                                    4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lmain                                                1     1      0     899
                                              8 COMMON     1     1      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2     316
                                              4 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           1     0      1     104
                                              3 COMMON     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     3      1     269
                                              3 COMMON     4     3      1
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _Lmain
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
     ___bmul
   _blink_led
     _delay_ms_variable
   _keypad_getkey
   _keypad_init
   _monitoreo
     _LCD_Clear
     _LCD_String_xy
   _secuencia5
   _secuencia6
   _secuencia7
   _strncmp

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      16     20.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      69     86.2%
BITBANK0            80      0       0      0.0%
COMMON              14     13      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      99      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 03 19:44:55 2024

                        pc 0002             ___bmul@product 0071               ?_LCD_Command 0070  
                       l62 0101                         l90 0752                         l78 0354  
                       l88 0739                         fsr 0004                ?_LCD_String 0073  
          _LCD_Custom_Char 01B0                        l112 04A1                        l105 0671  
                      l122 03F3                        l115 0139                        l220 0212  
                      l133 00A2                        l223 0248                        l217 01AF  
                      l234 015D                        l243 01DC                        l229 011D  
                      l237 00B2                        l360 00D5                        l248 0299  
                      l192 0582                        l794 02F1                        u610 011D  
                      u611 011C                        u620 0101                        u700 0306  
                      u605 01F9                        u621 0100                        u701 0305  
                      u630 0141                        u710 030E                        u631 0140  
                      u711 030D                        u640 01B7                        u720 0320  
                      u800 04DB                        u641 01B6                        u721 031F  
                      u801 04DA                        u730 0328                        u810 04E2  
                      u731 0327                        u811 04E1                        u660 01DC  
                      u740 0330                        u900 0532                        u820 04E9  
                      u661 01DB                        u741 032F                        u901 0531  
                      u821 04E8                        u670 00C9                        u750 0354  
                      u910 0539                        u830 04EF                        u655 01BA  
                      u671 00C8                        u751 0353                        u911 0538  
                      u831 04EE                        u680 00D4                        u760 0281  
                      u920 0540                        u840 04FF                        u681 00D3  
                      u761 0280                        u921 053F                        u841 04FE  
                      u690 02FE                        u930 0547                        u850 0506  
                      u770 04A8                        u595 022F                        u755 0350  
                      u691 02FD                        u931 0546                        u851 0505  
                      u940 0557                        u860 050D                        u780 04C4  
                      u941 0556                        u861 050C                        u781 04C3  
                      u950 055E                        u870 0514                        u790 04D4  
                      u951 055D                        u871 0513                        u791 04D3  
                      u960 0565                        u880 051B                        u961 0564  
                      u881 051A                        u970 056C                        u890 052B  
                      u971 056B                        u891 052A                        u980 057F  
                      u981 057E                        u990 02A8                        u991 02A7  
                      u985 057B                        _idx 007D                        fsr0 0004  
                      indf 0000                LCD_Char@dat 0072                       l1401 0103  
                     l1403 010F                       l1411 00F3                       l1501 0197  
                     l1405 0111                       l1421 014C                       l1413 013B  
                     l1503 019D                       l1431 01B1                       l1423 0150  
                     l1415 013B                       l1407 00E9                       l1511 00A1  
                     l1505 01A3                       l1361 021D                       l1441 01C8  
                     l1433 01B7                       l1425 0156                       l1417 0141  
                     l1521 0282                       l1513 0249                       l1409 00EA  
                     l1601 053A                       l1507 01A9                       l1371 022C  
                     l1363 021E                       l1443 01D4                       l1435 01C7  
                     l1419 0145                       l1451 00C9                       l1523 0296  
                     l1515 027A                       l1611 054F                       l1603 053C  
                     l1531 04B7                       l1427 00A3                       l1381 01E7  
                     l1373 023A                       l1365 021F                       l1445 01D6  
                     l1453 00CB                       l1517 027B                       l1461 02F5  
                     l1621 0561                       l1613 0551                       l1605 0540  
                     l1541 04C4                       l1533 04BA                       l1509 009B  
                     l1429 00A9                       l1701 0619                       l1391 01F6  
                     l1383 01E8                       l1375 023B                       l1367 0220  
                     l1359 0214                       l1455 00CD                       l1447 00C4  
                     l1471 0308                       l1463 02F8                       l1631 057F  
                     l1623 0566                       l1615 0558                       l1607 0547  
                     l1551 04D7                       l1543 04C6                       l1527 04A2  
                     l1711 011E                       l1703 0626                       l1393 0204  
                     l1385 01E9                       l1377 023C                       l1369 0223  
                     l1457 00D4                       l1449 00C5                       l1481 0322  
                     l1473 030E                       l1465 02FE                       l1625 0568  
                     l1617 055A                       l1609 0549                       l1553 04DC  
                     l1545 04CC                       l1561 04E9                       l1529 04B7  
                     l1713 0123                       l1705 0653                       l1721 0400  
                     l1801 03B2                       l1641 02AB                       l1395 0205  
                     l1387 01EA                       l1379 01DE                       l1491 033A  
                     l1483 0328                       l1475 030F                       l1467 0300  
                     l1619 055F                       l1627 056C                       l1571 0500  
                     l1563 04EF                       l1555 04DE                       l1547 04CE  
                     l1539 04BC                       l1715 012C                       l1707 065E  
                     l1731 0425                       l1811 03DE                       l1803 03C9  
                     l1651 02CF                       l1643 02AF                       l1635 029A  
                     l1397 0206                       l1389 01ED                       l1485 032A  
                     l1477 0318                       l1469 0306                       l1493 034A  
                     l1629 0572                       l1581 0510                       l1573 0502  
                     l1565 04F1                       l1557 04E3                       l1549 04D5  
                     l1709 0664                       l1661 058F                       l1741 0455  
                     l1733 0436                       l1717 03F4                       l1813 03DF  
                     l1805 03D1                       l1653 02DF                       l1637 02A8  
                     l1645 02B5                       l1901 0795                       l1821 0676  
                     l1495 0186                       l1399 0102                       l1487 0330  
                     l1479 0320                       l1591 0525                       l1575 0507  
                     l1567 04F7                       l1583 0514                       l1559 04E5  
                     l1671 05B5                       l1751 0472                       l1743 0457  
                     l1735 0443                       l1727 0404                       l1719 03FE  
                     l1815 03E0                       l1807 03D2                       l1647 02BD  
                     l1903 079C                       l1911 07C0                       l1831 068C  
                     l1823 0680                       l1497 0189                       l1489 0331  
                     l1593 052C                       l1585 051B                       l1577 0509  
                     l1569 04F9                       l1681 05D7                       l1673 05BA  
                     l1657 0583                       l1761 0494                       l1753 0477  
                     l1737 044D                       l1729 041B                       l1817 03E6  
                     l1809 03DD                       l1649 02C9                       l1913 07CF  
                     l1905 07A1                       l1841 06A7                       l1833 068F  
                     l1825 0683                       l1499 0191                       l1595 052E  
                     l1587 051D                       l1579 050E                       l1691 05FE  
                     l1683 05DC                       l1675 05C0                       l1667 0591  
                     l1659 058D                       l1755 047D                       l1739 044F  
                     l1763 0355                       l1915 07D4                       l1907 07AA  
                     l1851 06C0                       l1843 06AD                       l1835 0690  
                     l1827 0684                       l1819 0672                       l1597 0533  
                     l1589 0523                       l1693 0600                       l1685 05E1  
                     l1677 05C2                       l1669 05A8                       l1757 047F  
                     l1749 0468                       l1781 038E                       l1773 0363  
                     l1765 035F                       l1909 07BC                       l1861 06F6  
                     l1853 06CF                       l1845 06B2                       l1837 0691  
                     l1829 0687                       l1599 0535                       l1687 05E7  
                     l1679 05CF                       l1759 048C                       l1791 03A4  
                     l1783 038F                       l1775 037A                       l1767 0361  
                     l1871 0724                       l1863 0708                       l1855 06D5  
                     l1847 06B8                       l1839 0692                       l1689 05F4  
                     l1793 03AE                       l1785 0390                       l1777 0382  
                     l1873 0733                       l1865 070C                       l1857 06E8  
                     l1849 06BE                       l1699 0602                       l1795 03B0  
                     l1787 0391                       l1779 0383                       l1883 0756  
                     l1875 073D                       l1867 0710                       l1859 06ED  
                     l1789 0397                       l1885 0765                       l1877 074C  
                     l1869 071F                       l1893 076B                       l1895 0770  
                     l1897 0779                       l1899 078B                       STR_1 0050  
                     STR_2 0041                       STR_3 0020                       STR_4 000E  
                     STR_5 005C                       STR_6 0031                       u1000 02BD  
                     u1001 02BC                       u1010 02C9                       u1011 02C8  
                     u1020 02CF                       u1100 06B2                       u1021 02CE  
                     u1101 06B1                       u1030 02DF                       u1110 06D5  
                     u1031 02DE                       u1111 06D4                       u1040 05F4  
                     u1120 06E8                       u1041 05F3                       u1121 06E7  
                     u1050 0671                       u1130 0710                       u1051 0670  
                     u1131 070F                       u1060 0443                       u1140 073D  
                     u1045 05F0                       u1061 0442                       u1141 073C  
                     u1070 04A1                       u1150 0756                       u1055 066D  
                     u1071 04A0                       u1151 0755                       u1207 0745  
                     u1080 03A4                       u1160 079C                       u1065 043F  
                     u1081 03A3                       u1161 079B                       u1217 075E  
                     u1090 03F3                       u1307 0612                       u1075 049D  
                     u1091 03F2                       u1227 07C8                       u1317 063F  
                     u1085 03A0                       u1237 0373                       u1407 0243  
                     u1327 0132                       u1095 03EF                       u1247 03C2  
                     u1417 018D                       u1337 00AD                       u1257 0414  
                     u1177 06C8                       u1427 01F1                       u1347 04C8  
                     u1267 045D                       u1187 0718                       u1437 020D  
                     u1357 04F3                       u1277 0485                       u1197 072C  
                     u1367 051F                       u1287 05A1                       u1377 054B  
                     u1297 05C8                       u1387 00EE                       u1397 0227  
                     _main 0672                       btemp 007E                       start 0000  
            _LCD_String_xy 013A          ___bmul@multiplier 0072           __end_of_LCD_Char 0249  
         __end_of_LCD_Init 01B0                      ?_main 0070                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _Lmain 0249               ?_keypad_init 0070  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_strncmp 02F2             ?_LCD_String_xy 0074    __end_of_LCD_Custom_Char 01DD  
          __initialization 07D9               __end_of_main 07D9                     ??_main 005B  
        __end_of_LCD_Clear 00B3                     ?_Lmain 0070        keypad_getkey@letras 0048  
                   _ANSELH 0189           LCD_String_xy@msg 0075           LCD_String_xy@pos 0074  
         LCD_String_xy@row 0076                     _OSCCON 008F                     Lmain@i 0078  
                   ___bmul 00C3           __end_of_password 000E           LCD_Custom_Char@i 0076  
      delay_ms_variable@ms 0070                  ??_strncmp 0074                  ?_LCD_Char 0070  
  __end_of__initialization 07FC                  ?_LCD_Init 0070            ??_LCD_String_xy 0076  
      ___bmul@multiplicand 0070              __end_of_Lmain 029A           ?_LCD_Custom_Char 0073  
           __pcstackCOMMON 0070               __pidataBANK0 015E               __pidataBANK1 00B3  
             ??_LCD_String 0074             _OPTION_REGbits 0081                    ??_Lmain 0078  
               __pbssBANK0 005E                 ??_LCD_Char 0070                 _character1 0040  
               _character2 0038                 _character3 0030                 _character4 0028  
               _character5 0020                 ??_LCD_Init 0073         __end_of_LCD_String 011E  
               __pmaintext 0672                    ?___bmul 0070              _keypad_getkey 04A2  
              secuencia5@i 0048                secuencia6@i 0048                secuencia7@i 0048  
        _delay_ms_variable 00E9         ?_delay_ms_variable 0070                 __stringtab 0003  
        __end_of_blink_led 0355        ??_delay_ms_variable 0072              LCD_String@msg 0073  
                  __ptext1 029A                    __ptext2 0355                    __ptext3 03F4  
                  __ptext4 0583                    __ptext5 011E                    __ptext6 00A3  
                  __ptext7 009B                    __ptext8 04A2                    __ptext9 02F2  
           ?_keypad_getkey 0070  __end_of_delay_ms_variable 0102                  _LCD_Clear 00A3  
                  main@key 007C                    _strncmp 029A       end_of_initialization 07FC  
               _secuencia5 0583                 _secuencia6 03F4                 _secuencia7 0355  
           LCD_Command@cmd 0072          __end_of_monitoreo 013A                  _PORTAbits 0005  
                _PORTCbits 0007                  _PORTEbits 0009                  _TRISAbits 0085  
               ?_LCD_Clear 0070              ??_LCD_Command 0070             __end_of___bmul 00D6  
          ??_keypad_getkey 0070         keypad_getkey@F1424 00A0        start_initialization 07D9  
              ?_secuencia5 0070                ?_secuencia6 0070                ?_secuencia7 0070  
       keypad_getkey@valor 0058      __end_of_LCD_String_xy 015E                   ??___bmul 0071  
               init_fetch0 00D6                __pdataBANK0 0020                __pdataBANK1 00A0  
      __end_of_LCD_Command 0213                __pbssCOMMON 007D                  ___latbits 0002  
            __pcstackBANK0 0048                ??_LCD_Clear 0073              ??_keypad_init 0070  
                _blink_led 02F2                  __pstrings 0003      blink_led@elapsed_time 0048  
    LCD_String_xy@location 0077                   ?_strncmp 0070                   _LCD_Char 0213  
                 _LCD_Init 0186                  _pass_user 0060        __end_of_keypad_init 00A3  
                _monitoreo 011E                 ?_blink_led 0074                _LCD_Command 01DD  
              __stringbase 0008          ??_LCD_Custom_Char 0074                 ?_monitoreo 0070  
       __end_of__stringtab 0009                   __ptext10 00E9                   __ptext11 0249  
                 __ptext12 00C3                   __ptext13 013A                   __ptext14 0102  
                 __ptext15 01B0                   __ptext16 0213                   __ptext17 0186  
                 __ptext18 01DD                _keypad_init 009B               ??_secuencia5 0070  
             ??_secuencia6 0070               ??_secuencia7 0070                   _intentos 005E  
                 _password 0009          blink_led@duration 0078          blink_led@off_time 0076  
              ??_blink_led 007A               blink_led@led 004A                 _LCD_String 0102  
          secuencia5@i_238 004A            secuencia6@i_247 004A            secuencia7@i_261 004A  
    __end_of_keypad_getkey 0583         __end_of_secuencia5 0672         __end_of_secuencia6 04A2  
       __end_of_secuencia7 03F4            secuencia5@var12 004C            secuencia5@var34 004E  
          secuencia6@var12 004C            secuencia6@var34 0052            secuencia7@var12 004C  
          secuencia7@var34 004E                   init_ram0 00DA         LCD_Custom_Char@loc 0075  
       LCD_Custom_Char@msg 0073                  stringcode 0003                ??_monitoreo 0078  
         blink_led@on_time 0074             secuencia5@var1 0052             secuencia5@var2 0054  
           secuencia5@var3 0056             secuencia5@var4 0050             secuencia6@var1 004E  
           secuencia6@var2 0050             secuencia6@var3 0054             secuencia6@var4 0056  
           secuencia7@var1 0050             secuencia7@var2 0054             secuencia7@var3 0052  
           secuencia7@var4 0056                   strncmp@l 0070                   strncmp@n 0072  
                 strncmp@r 0071                   stringdir 0003                   stringtab 0003  
           keypad_getkey@i 0059                 _STATUSbits 0003  
